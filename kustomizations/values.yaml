domain: bigbang.dev

registryCredentials:
  registry: "${ZARF_REGISTRY}"
  username: "zarf-pull"
  password: "${ZARF_REGISTRY_AUTH_PULL}"

git:
  existingSecret: "private-git-server"

networkPolicies:
  enabled: true
  # When in prod use a real CIDR. Don't do this, it isn't secure.
  controlPlaneCidr: "0.0.0.0/0"
  nodeCidr: "0.0.0.0/0"
  vpcCidr: "0.0.0.0/0"

istio:
  enabled: true
  git:
    repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__core__istio-controlplane.git
  keycloak:
    enabled: true
  ingressGateways:
    public-ingressgateway:
      type: "LoadBalancer"
      kubernetesResourceSpec:
        resources:
          requests:
            cpu: "100m"
            memory: "512Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
    passthrough-ingressgateway:
      type: "LoadBalancer"
  values:
    istiod:
      resources:
        requests:
          cpu: "100m"
          memory: "1Gi"
        limits:
          cpu: "500m"
          memory: "1Gi"
      hpaSpec:
        maxReplicas: 1
    values:
      global:
        proxy:
          resources:
            requests:
              memory: "1Gi"
            limits:
              memory: "1Gi"
  gateways:
    public:
      tls:
        key: |
          -----BEGIN PRIVATE KEY-----
          MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgbI4SyUc4dXDvtm/x
          PxxrC7qjmb2Kxit/ZphilhOoUF+hRANCAARBXS6lFbqcDFR5VUzihkUshJ7yX2s7
          cXFqUD0ChkmsDnT+igae9xg6hEnz83JaTr4YAqJhEpI2B0ZLcVa4kMkw
          -----END PRIVATE KEY-----
        cert: |
          -----BEGIN CERTIFICATE-----
          MIIEUzCCAzugAwIBAgISBHoCz33seokZ+hWF+OfiTMqlMA0GCSqGSIb3DQEBCwUA
          MDIxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MQswCQYDVQQD
          EwJSMzAeFw0yMjExMjgwMjA3MzBaFw0yMzAyMjYwMjA3MjlaMBgxFjAUBgNVBAMM
          DSouYmlnYmFuZy5kZXYwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARBXS6lFbqc
          DFR5VUzihkUshJ7yX2s7cXFqUD0ChkmsDnT+igae9xg6hEnz83JaTr4YAqJhEpI2
          B0ZLcVa4kMkwo4ICRjCCAkIwDgYDVR0PAQH/BAQDAgeAMB0GA1UdJQQWMBQGCCsG
          AQUFBwMBBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB0GA1UdDgQWBBSZLuU4qIJi
          qr/SY+/C7ifK344D4zAfBgNVHSMEGDAWgBQULrMXt1hWy65QCUDmH6+dixTCxjBV
          BggrBgEFBQcBAQRJMEcwIQYIKwYBBQUHMAGGFWh0dHA6Ly9yMy5vLmxlbmNyLm9y
          ZzAiBggrBgEFBQcwAoYWaHR0cDovL3IzLmkubGVuY3Iub3JnLzAYBgNVHREEETAP
          gg0qLmJpZ2JhbmcuZGV2MEwGA1UdIARFMEMwCAYGZ4EMAQIBMDcGCysGAQQBgt8T
          AQEBMCgwJgYIKwYBBQUHAgEWGmh0dHA6Ly9jcHMubGV0c2VuY3J5cHQub3JnMIIB
          AgYKKwYBBAHWeQIEAgSB8wSB8ADuAHUAtz77JN+cTbp18jnFulj0bF38Qs96nzXE
          nh0JgSXttJkAAAGEvDQ68gAABAMARjBEAiB1/FhMAr6tarPIBlGR9ZiL/WBB6idj
          yQeNNiGzaz/VcAIgBLdpCxIC+YJ9ASx+6sh4C20P90EsHbjbKX2VXTZiCMgAdQB6
          MoxU2LcttiDqOOBSHumEFnAyE4VNO9IrwTpXo1LrUgAAAYS8NDsDAAAEAwBGMEQC
          IGXii83fe7DSKjK/ySAxHki4A8OBittl2xHFHMwlMMctAiA2offWzUhaozyClcz8
          fhlQKYsJTfZbEwyEqqhHwyFnRTANBgkqhkiG9w0BAQsFAAOCAQEAuPfgvelt/5FX
          7ZVkuKWDMdfK/7+mEUk6NFKXgMALC4AY+mFn9FbdwNGcK1kCF1Iri45T/LFwKlOt
          oZSz3zokzSqboAh7Fbz+ZLWEm+/rcjDtNC741nCfhRALQ3zTXTQ/eko8/KpMbrpJ
          P9TwblH78XI3CDDl8dxTmKslpfENLUYfkK1dCKUtxykB8uXQ3AjbeKCN8MUPMDIs
          SShD69vtzjpFIIK44dExBWkDAHZFiG/if3yutAciuipBkacbJMx8/V7BUZbqPaHe
          IMw7np50bsAZWrIsN5rQfj0nZQWbgk3BpRqtswqpPMmhxFNq0d3uW+HVPTRRmUt8
          bCov2UvY8g==
          -----END CERTIFICATE-----
          -----BEGIN CERTIFICATE-----
          MIIFFjCCAv6gAwIBAgIRAJErCErPDBinU/bWLiWnX1owDQYJKoZIhvcNAQELBQAw
          TzELMAkGA1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2Vh
          cmNoIEdyb3VwMRUwEwYDVQQDEwxJU1JHIFJvb3QgWDEwHhcNMjAwOTA0MDAwMDAw
          WhcNMjUwOTE1MTYwMDAwWjAyMQswCQYDVQQGEwJVUzEWMBQGA1UEChMNTGV0J3Mg
          RW5jcnlwdDELMAkGA1UEAxMCUjMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
          AoIBAQC7AhUozPaglNMPEuyNVZLD+ILxmaZ6QoinXSaqtSu5xUyxr45r+XXIo9cP
          R5QUVTVXjJ6oojkZ9YI8QqlObvU7wy7bjcCwXPNZOOftz2nwWgsbvsCUJCWH+jdx
          sxPnHKzhm+/b5DtFUkWWqcFTzjTIUu61ru2P3mBw4qVUq7ZtDpelQDRrK9O8Zutm
          NHz6a4uPVymZ+DAXXbpyb/uBxa3Shlg9F8fnCbvxK/eG3MHacV3URuPMrSXBiLxg
          Z3Vms/EY96Jc5lP/Ooi2R6X/ExjqmAl3P51T+c8B5fWmcBcUr2Ok/5mzk53cU6cG
          /kiFHaFpriV1uxPMUgP17VGhi9sVAgMBAAGjggEIMIIBBDAOBgNVHQ8BAf8EBAMC
          AYYwHQYDVR0lBBYwFAYIKwYBBQUHAwIGCCsGAQUFBwMBMBIGA1UdEwEB/wQIMAYB
          Af8CAQAwHQYDVR0OBBYEFBQusxe3WFbLrlAJQOYfr52LFMLGMB8GA1UdIwQYMBaA
          FHm0WeZ7tuXkAXOACIjIGlj26ZtuMDIGCCsGAQUFBwEBBCYwJDAiBggrBgEFBQcw
          AoYWaHR0cDovL3gxLmkubGVuY3Iub3JnLzAnBgNVHR8EIDAeMBygGqAYhhZodHRw
          Oi8veDEuYy5sZW5jci5vcmcvMCIGA1UdIAQbMBkwCAYGZ4EMAQIBMA0GCysGAQQB
          gt8TAQEBMA0GCSqGSIb3DQEBCwUAA4ICAQCFyk5HPqP3hUSFvNVneLKYY611TR6W
          PTNlclQtgaDqw+34IL9fzLdwALduO/ZelN7kIJ+m74uyA+eitRY8kc607TkC53wl
          ikfmZW4/RvTZ8M6UK+5UzhK8jCdLuMGYL6KvzXGRSgi3yLgjewQtCPkIVz6D2QQz
          CkcheAmCJ8MqyJu5zlzyZMjAvnnAT45tRAxekrsu94sQ4egdRCnbWSDtY7kh+BIm
          lJNXoB1lBMEKIq4QDUOXoRgffuDghje1WrG9ML+Hbisq/yFOGwXD9RiX8F6sw6W4
          avAuvDszue5L3sz85K+EC4Y/wFVDNvZo4TYXao6Z0f+lQKc0t8DQYzk1OXVu8rp2
          yJMC6alLbBfODALZvYH7n7do1AZls4I9d1P4jnkDrQoxB3UqQ9hVl3LEKQ73xF1O
          yK5GhDDX8oVfGKF5u+decIsH4YaTw7mP3GFxJSqv3+0lUFJoi5Lc5da149p90Ids
          hCExroL1+7mryIkXPeFM5TgO9r0rvZaBFOvV2z0gp35Z0+L4WPlbuEjN/lxPFin+
          HlUjr8gRsI3qfJOQFy/9rKIJR0Y/8Omwt/8oTWgy1mdeHmmjk7j1nYsvC9JSQ6Zv
          MldlTTKB3zhThV1+XWYp6rjd5JW1zbVWEkLNxE7GJThEUG3szgBVGP7pSWTUTsqX
          nLRbwHOoq7hHwg==
          -----END CERTIFICATE-----
          -----BEGIN CERTIFICATE-----
          MIIFYDCCBEigAwIBAgIQQAF3ITfU6UK47naqPGQKtzANBgkqhkiG9w0BAQsFADA/
          MSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT
          DkRTVCBSb290IENBIFgzMB4XDTIxMDEyMDE5MTQwM1oXDTI0MDkzMDE4MTQwM1ow
          TzELMAkGA1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2Vh
          cmNoIEdyb3VwMRUwEwYDVQQDEwxJU1JHIFJvb3QgWDEwggIiMA0GCSqGSIb3DQEB
          AQUAA4ICDwAwggIKAoICAQCt6CRz9BQ385ueK1coHIe+3LffOJCMbjzmV6B493XC
          ov71am72AE8o295ohmxEk7axY/0UEmu/H9LqMZshftEzPLpI9d1537O4/xLxIZpL
          wYqGcWlKZmZsj348cL+tKSIG8+TA5oCu4kuPt5l+lAOf00eXfJlII1PoOK5PCm+D
          LtFJV4yAdLbaL9A4jXsDcCEbdfIwPPqPrt3aY6vrFk/CjhFLfs8L6P+1dy70sntK
          4EwSJQxwjQMpoOFTJOwT2e4ZvxCzSow/iaNhUd6shweU9GNx7C7ib1uYgeGJXDR5
          bHbvO5BieebbpJovJsXQEOEO3tkQjhb7t/eo98flAgeYjzYIlefiN5YNNnWe+w5y
          sR2bvAP5SQXYgd0FtCrWQemsAXaVCg/Y39W9Eh81LygXbNKYwagJZHduRze6zqxZ
          Xmidf3LWicUGQSk+WT7dJvUkyRGnWqNMQB9GoZm1pzpRboY7nn1ypxIFeFntPlF4
          FQsDj43QLwWyPntKHEtzBRL8xurgUBN8Q5N0s8p0544fAQjQMNRbcTa0B7rBMDBc
          SLeCO5imfWCKoqMpgsy6vYMEG6KDA0Gh1gXxG8K28Kh8hjtGqEgqiNx2mna/H2ql
          PRmP6zjzZN7IKw0KKP/32+IVQtQi0Cdd4Xn+GOdwiK1O5tmLOsbdJ1Fu/7xk9TND
          TwIDAQABo4IBRjCCAUIwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYw
          SwYIKwYBBQUHAQEEPzA9MDsGCCsGAQUFBzAChi9odHRwOi8vYXBwcy5pZGVudHJ1
          c3QuY29tL3Jvb3RzL2RzdHJvb3RjYXgzLnA3YzAfBgNVHSMEGDAWgBTEp7Gkeyxx
          +tvhS5B1/8QVYIWJEDBUBgNVHSAETTBLMAgGBmeBDAECATA/BgsrBgEEAYLfEwEB
          ATAwMC4GCCsGAQUFBwIBFiJodHRwOi8vY3BzLnJvb3QteDEubGV0c2VuY3J5cHQu
          b3JnMDwGA1UdHwQ1MDMwMaAvoC2GK2h0dHA6Ly9jcmwuaWRlbnRydXN0LmNvbS9E
          U1RST09UQ0FYM0NSTC5jcmwwHQYDVR0OBBYEFHm0WeZ7tuXkAXOACIjIGlj26Ztu
          MA0GCSqGSIb3DQEBCwUAA4IBAQAKcwBslm7/DlLQrt2M51oGrS+o44+/yQoDFVDC
          5WxCu2+b9LRPwkSICHXM6webFGJueN7sJ7o5XPWioW5WlHAQU7G75K/QosMrAdSW
          9MUgNTP52GE24HGNtLi1qoJFlcDyqSMo59ahy2cI2qBDLKobkx/J3vWraV0T9VuG
          WCLKTVXkcGdtwlfFRjlBz4pYg1htmf5X6DYO8A4jqv2Il9DjXA6USbW1FzXSLr9O
          he8Y4IWS6wY7bCkjCWDcRQJMEhg76fsO3txE+FiYruq9RUWhiF1myv4Q6W+CyBFC
          Dfvp7OOGAN6dEOM4+qR9sdjoSYKEBpsr6GtPAQw4dy753ec5
          -----END CERTIFICATE-----
      ingressGateway: public-ingressgateway
      hosts:
        - registry.{{ .Values.domain }}
    passthrough:
      ingressGateway: passthrough-ingressgateway
      hosts:
        - keycloak.{{ .Values.domain }}
      tls:
        mode: "PASSTHROUGH"

istiooperator:
  enabled: true
  git:
    repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__core__istio-operator.git
  values:
    operator:
      resources:
        limits:
          cpu: "500m"
          memory: "256Mi"
        requests:
          cpu: "100m"
          memory: "256Mi"

jaeger:
  enabled: true
  git:
    repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__core__jaeger.git
  values:
    istio:
      mtls:
        mode: STRICT
    jaeger:
      spec:
        allInOne:
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "128Mi"
        collector:
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "128Mi"
    resources:
      limits:
        cpu: "500m"
        memory: "128Mi"
      requests:
        cpu: "100m"
        memory: "128Mi"

kiali:
  enabled: true
  git:
    repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__core__kiali.git
  values:
    istio:
      mtls:
        mode: PERMISSIVE
    resources:
      requests:
        cpu: "100m"
        memory: "512Mi"
      limits:
        cpu: "500m"
        memory: "512Mi"
    cr:
      spec:
        deployment:
          resources:
            requests:
              cpu: "200m"
              memory: "512Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"

clusterAuditor:
  enabled: false
  git:
    repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__core__cluster-auditor.git
  values:
    istio:
      mtls:
        mode: PERMISSIVE
    resources:
      requests:
        cpu: "100m"
        memory: "512Mi"
      limits:
        cpu: "500m"
        memory: "512Mi"

gatekeeper:
  enabled: false

logging:
  enabled: false

eckoperator:
  enabled: false

fluentbit:
  enabled: false

loki:
  enabled: true
  git:
    repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__sandbox__loki.git
  strategy: "scalable"
  objectStorage:
    endpoint: minio.minio.svc.cluster.local
    region: "minio"
    # accessKey: "" -- Added in environment-bb/values.yaml
    # accessSecret: "" -- Added in environment-bb/values.yaml
    bucketNames:
      chunks: loki-logs
      ruler: loki-ruler
      admin: loki-admin
  values:
    read:
      replicas: 1
    write:
      replicas: 1
    minio:
      enabled: false
    istio:
      mtls:
        mode: PERMISSIVE

promtail:
  enabled: true
  git:
    repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__sandbox__promtail.git
  values:
    istio:
      mtls:
        mode: PERMISSIVE
    resources:
      limits:
        cpu: "500m"
        memory: "750Mi"
      requests:
        cpu: "100m"
        memory: "256Mi"

monitoring:
  enabled: true
  git:
    repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__core__monitoring.git
  values:
    istio:
      mtls:
        mode: PERMISSIVE
    cleanUpgrade:
      resources:
        requests:
          memory: "128Mi"
          cpu: "100m"
        limits:
          memory: "256Mi"
          cpu: "200m"
    alertmanager:
      alertmanagerSpec:
        resources:
          limits:
            cpu: "500m"
            memory: "256Mi"
          requests:
            cpu: "100m"
            memory: "256Mi"
    grafana:
      resources:
        limits:
          cpu: "500m"
          memory: "512Mi"
        requests:
          cpu: "100m"
          memory: "256Mi"
      sidecar:
        resources:
          limits:
            cpu: "500m"
            memory: "100Mi"
          requests:
            cpu: "50m"
            memory: "50Mi"
      downloadDashboards:
        resources:
          limits:
            cpu: "20m"
            memory: "20Mi"
          requests:
            cpu: "20m"
            memory: "20Mi"
    kube-state-metrics:
      resources:
        limits:
          cpu: "500m"
          memory: "128Mi"
        requests:
          cpu: "10m"
          memory: "128Mi"
    prometheus-node-exporter:
      resources:
        limits:
          cpu: "500m"
          memory: "128Mi"
        requests:
          cpu: "100m"
          memory: "128Mi"
    prometheusOperator:
      admissionWebhooks:
        patch:
          resources:
            limits:
              cpu: "100m"
              memory: "128Mi"
            requests:
              cpu: "50m"
              memory: "128Mi"
        cleanupProxy:
          resources:
            limits:
              cpu: "100m"
              memory: "128Mi"
            requests:
              cpu: "50m"
              memory: "128Mi"
      resources:
        limits:
          cpu: "500m"
          memory: "512Mi"
        requests:
          cpu: "100m"
          memory: "512Mi"
      prometheusConfigReloader:
        resources:
          requests:
            cpu: "50m"
            memory: "128Mi"
          limits:
            cpu: "100m"
            memory: "128Mi"
    prometheus:
      prometheusSpec:
        resources:
          limits:
            cpu: "300m"
            memory: "2Gi"
          requests:
            cpu: "100m"
            memory: "2Gi"

twistlock:
  # Disabling Twistlock for now since Big Bang now needs a license to be specified for Twistlock to initialize successfully. Will re-evaluate turning it back on later, or possibly swap it out for Neuvector once that becomes available.
  enabled: false

kyverno:
  enabled: true
  git:
    repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__sandbox__kyverno.git

sso:
  oidc:
    host: keycloak.bigbang.dev
    realm: baby-yoda
  token_url: "https://{{ .Values.sso.oidc.host }}/auth/realms/{{ .Values.sso.oidc.realm }}/protocol/openid-connect/token"
  auth_url: "https://{{ .Values.sso.oidc.host }}/auth/realms/{{ .Values.sso.oidc.realm }}/protocol/openid-connect/auth"
  jwks_uri: "https://{{ .Values.sso.oidc.host }}/auth/realms/{{ .Values.sso.oidc.realm }}/protocol/openid-connect/certs"
  certificate_authority: |
    -----BEGIN CERTIFICATE-----
    MIIFazCCA1OgAwIBAgIRAIIQz7DSQONZRGPgu2OCiwAwDQYJKoZIhvcNAQELBQAw
    TzELMAkGA1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2Vh
    cmNoIEdyb3VwMRUwEwYDVQQDEwxJU1JHIFJvb3QgWDEwHhcNMTUwNjA0MTEwNDM4
    WhcNMzUwNjA0MTEwNDM4WjBPMQswCQYDVQQGEwJVUzEpMCcGA1UEChMgSW50ZXJu
    ZXQgU2VjdXJpdHkgUmVzZWFyY2ggR3JvdXAxFTATBgNVBAMTDElTUkcgUm9vdCBY
    MTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAK3oJHP0FDfzm54rVygc
    h77ct984kIxuPOZXoHj3dcKi/vVqbvYATyjb3miGbESTtrFj/RQSa78f0uoxmyF+
    0TM8ukj13Xnfs7j/EvEhmkvBioZxaUpmZmyPfjxwv60pIgbz5MDmgK7iS4+3mX6U
    A5/TR5d8mUgjU+g4rk8Kb4Mu0UlXjIB0ttov0DiNewNwIRt18jA8+o+u3dpjq+sW
    T8KOEUt+zwvo/7V3LvSye0rgTBIlDHCNAymg4VMk7BPZ7hm/ELNKjD+Jo2FR3qyH
    B5T0Y3HsLuJvW5iB4YlcNHlsdu87kGJ55tukmi8mxdAQ4Q7e2RCOFvu396j3x+UC
    B5iPNgiV5+I3lg02dZ77DnKxHZu8A/lJBdiB3QW0KtZB6awBdpUKD9jf1b0SHzUv
    KBds0pjBqAlkd25HN7rOrFleaJ1/ctaJxQZBKT5ZPt0m9STJEadao0xAH0ahmbWn
    OlFuhjuefXKnEgV4We0+UXgVCwOPjdAvBbI+e0ocS3MFEvzG6uBQE3xDk3SzynTn
    jh8BCNAw1FtxNrQHusEwMFxIt4I7mKZ9YIqioymCzLq9gwQbooMDQaHWBfEbwrbw
    qHyGO0aoSCqI3Haadr8faqU9GY/rOPNk3sgrDQoo//fb4hVC1CLQJ13hef4Y53CI
    rU7m2Ys6xt0nUW7/vGT1M0NPAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNV
    HRMBAf8EBTADAQH/MB0GA1UdDgQWBBR5tFnme7bl5AFzgAiIyBpY9umbbjANBgkq
    hkiG9w0BAQsFAAOCAgEAVR9YqbyyqFDQDLHYGmkgJykIrGF1XIpu+ILlaS/V9lZL
    ubhzEFnTIZd+50xx+7LSYK05qAvqFyFWhfFQDlnrzuBZ6brJFe+GnY+EgPbk6ZGQ
    3BebYhtF8GaV0nxvwuo77x/Py9auJ/GpsMiu/X1+mvoiBOv/2X/qkSsisRcOj/KK
    NFtY2PwByVS5uCbMiogziUwthDyC3+6WVwW6LLv3xLfHTjuCvjHIInNzktHCgKQ5
    ORAzI4JMPJ+GslWYHb4phowim57iaztXOoJwTdwJx4nLCgdNbOhdjsnvzqvHu7Ur
    TkXWStAmzOVyyghqpZXjFaH3pO3JLF+l+/+sKAIuvtd7u+Nxe5AW0wdeRlN8NwdC
    jNPElpzVmbUq4JUagEiuTDkHzsxHpFKVK7q4+63SM1N95R1NbdWhscdCb+ZAJzVc
    oyi3B43njTOQ5yOf+1CceWxG1bQVs5ZufpsMljq4Ui0/1lvh+wjChP4kqKOJ2qxq
    4RgqsahDYVvTH9w7jXbyLeiNdd8XM2w9U/t7y0Ff/9yi0GE44Za4rF2LN9d11TPA
    mRGunUHBcnWEvgJBQl9nJEiU0Zsnvgc/ubhPgXRR4Xq37Z0j4r7g1SgEEzwxA57d
    emyPxgcYxn/eR44/KJ4EBs+lVDR3veyJm+kXQ99b21/+jh5Xos1AnX5iItreGCc=
    -----END CERTIFICATE-----

addons:
  authservice:
    enabled: true
    values:
      chains:
        podinfo:
          match:
            header: ":authority"
            prefix: "podinfo"
          callback_uri: https://podinfo.bigbang.dev/login/generic_oauth
          client_id: "demo-env_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_podinfo"
          client_secret: "l50TlHvzDgz8W3vPrdloO59drXPOerrg"

  metricsServer:
    enabled: false

  minioOperator:
    enabled: true
    git:
      repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__application-utilities__minio-operator.git
    values:
      operator:
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
            ephemeral-storage: 500Mi
          limits:
            cpu: 200m
            memory: 256Mi
      istio:
        enabled: true
        mtls:
          mode: PERMISSIVE

  minio:
    enabled: true
    git:
      repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__application-utilities__minio.git
    values:
      istio:
        mtls:
          mode: PERMISSIVE
      # https://github.com/minio/operator/blob/master/docs/crd.adoc
      tenants:
        # Required to be here due to a weird quirk in bucket creation. See https://github.com/minio/operator/issues/1002#issuecomment-1028394242
        users:
          - name: minio-user-credentials
        # Pre-create buckets that will be needed for various services that will use MinIO
        # NOTE: Region is meaningless in this instantiation of MinIO. It's a required field but the value could be just about anything and it would work fine.
        buckets:
          # velero-backups
          - name: "velero-backups"
            region: "minio"
            objectLock: true
          # loki-logs
          - name: "loki-logs"
            region: "minio"
            objectLock: true
          - name: "loki-ruler"
            region: "minio"
            objectLock: true
          - name: "loki-admin"
            region: "minio"
            objectLock: true
        pools:
          - servers: 3
            volumesPerServer: 2
            size: 5Gi
            storageClassName: ""
            tolerations: {}
            nodeSelector: {}
            affinity: {}
            resources:
              requests:
                cpu: 250m
                memory: 2Gi
              limits:
                cpu: 250m
                memory: 2Gi
            securityContext:
              runAsUser: 1001
              runAsGroup: 1001
              fsGroup: 1001
              runAsNonRoot: true

  velero:
    enabled: false

  # neuvector:
  #   enabled: true
  #   git:
  #     repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__sandbox__neuvector.git
  keycloak:
    enabled: true
    git:
      repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__security-tools__keycloak.git
    ingress:
      gateway: "passthrough"
    values:
      replicas: 1
      ingress:
        key: |
          -----BEGIN PRIVATE KEY-----
          MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgbI4SyUc4dXDvtm/x
          PxxrC7qjmb2Kxit/ZphilhOoUF+hRANCAARBXS6lFbqcDFR5VUzihkUshJ7yX2s7
          cXFqUD0ChkmsDnT+igae9xg6hEnz83JaTr4YAqJhEpI2B0ZLcVa4kMkw
          -----END PRIVATE KEY-----
        cert: |
          -----BEGIN CERTIFICATE-----
          MIIEUzCCAzugAwIBAgISBHoCz33seokZ+hWF+OfiTMqlMA0GCSqGSIb3DQEBCwUA
          MDIxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MQswCQYDVQQD
          EwJSMzAeFw0yMjExMjgwMjA3MzBaFw0yMzAyMjYwMjA3MjlaMBgxFjAUBgNVBAMM
          DSouYmlnYmFuZy5kZXYwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARBXS6lFbqc
          DFR5VUzihkUshJ7yX2s7cXFqUD0ChkmsDnT+igae9xg6hEnz83JaTr4YAqJhEpI2
          B0ZLcVa4kMkwo4ICRjCCAkIwDgYDVR0PAQH/BAQDAgeAMB0GA1UdJQQWMBQGCCsG
          AQUFBwMBBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB0GA1UdDgQWBBSZLuU4qIJi
          qr/SY+/C7ifK344D4zAfBgNVHSMEGDAWgBQULrMXt1hWy65QCUDmH6+dixTCxjBV
          BggrBgEFBQcBAQRJMEcwIQYIKwYBBQUHMAGGFWh0dHA6Ly9yMy5vLmxlbmNyLm9y
          ZzAiBggrBgEFBQcwAoYWaHR0cDovL3IzLmkubGVuY3Iub3JnLzAYBgNVHREEETAP
          gg0qLmJpZ2JhbmcuZGV2MEwGA1UdIARFMEMwCAYGZ4EMAQIBMDcGCysGAQQBgt8T
          AQEBMCgwJgYIKwYBBQUHAgEWGmh0dHA6Ly9jcHMubGV0c2VuY3J5cHQub3JnMIIB
          AgYKKwYBBAHWeQIEAgSB8wSB8ADuAHUAtz77JN+cTbp18jnFulj0bF38Qs96nzXE
          nh0JgSXttJkAAAGEvDQ68gAABAMARjBEAiB1/FhMAr6tarPIBlGR9ZiL/WBB6idj
          yQeNNiGzaz/VcAIgBLdpCxIC+YJ9ASx+6sh4C20P90EsHbjbKX2VXTZiCMgAdQB6
          MoxU2LcttiDqOOBSHumEFnAyE4VNO9IrwTpXo1LrUgAAAYS8NDsDAAAEAwBGMEQC
          IGXii83fe7DSKjK/ySAxHki4A8OBittl2xHFHMwlMMctAiA2offWzUhaozyClcz8
          fhlQKYsJTfZbEwyEqqhHwyFnRTANBgkqhkiG9w0BAQsFAAOCAQEAuPfgvelt/5FX
          7ZVkuKWDMdfK/7+mEUk6NFKXgMALC4AY+mFn9FbdwNGcK1kCF1Iri45T/LFwKlOt
          oZSz3zokzSqboAh7Fbz+ZLWEm+/rcjDtNC741nCfhRALQ3zTXTQ/eko8/KpMbrpJ
          P9TwblH78XI3CDDl8dxTmKslpfENLUYfkK1dCKUtxykB8uXQ3AjbeKCN8MUPMDIs
          SShD69vtzjpFIIK44dExBWkDAHZFiG/if3yutAciuipBkacbJMx8/V7BUZbqPaHe
          IMw7np50bsAZWrIsN5rQfj0nZQWbgk3BpRqtswqpPMmhxFNq0d3uW+HVPTRRmUt8
          bCov2UvY8g==
          -----END CERTIFICATE-----
          -----BEGIN CERTIFICATE-----
          MIIFFjCCAv6gAwIBAgIRAJErCErPDBinU/bWLiWnX1owDQYJKoZIhvcNAQELBQAw
          TzELMAkGA1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2Vh
          cmNoIEdyb3VwMRUwEwYDVQQDEwxJU1JHIFJvb3QgWDEwHhcNMjAwOTA0MDAwMDAw
          WhcNMjUwOTE1MTYwMDAwWjAyMQswCQYDVQQGEwJVUzEWMBQGA1UEChMNTGV0J3Mg
          RW5jcnlwdDELMAkGA1UEAxMCUjMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
          AoIBAQC7AhUozPaglNMPEuyNVZLD+ILxmaZ6QoinXSaqtSu5xUyxr45r+XXIo9cP
          R5QUVTVXjJ6oojkZ9YI8QqlObvU7wy7bjcCwXPNZOOftz2nwWgsbvsCUJCWH+jdx
          sxPnHKzhm+/b5DtFUkWWqcFTzjTIUu61ru2P3mBw4qVUq7ZtDpelQDRrK9O8Zutm
          NHz6a4uPVymZ+DAXXbpyb/uBxa3Shlg9F8fnCbvxK/eG3MHacV3URuPMrSXBiLxg
          Z3Vms/EY96Jc5lP/Ooi2R6X/ExjqmAl3P51T+c8B5fWmcBcUr2Ok/5mzk53cU6cG
          /kiFHaFpriV1uxPMUgP17VGhi9sVAgMBAAGjggEIMIIBBDAOBgNVHQ8BAf8EBAMC
          AYYwHQYDVR0lBBYwFAYIKwYBBQUHAwIGCCsGAQUFBwMBMBIGA1UdEwEB/wQIMAYB
          Af8CAQAwHQYDVR0OBBYEFBQusxe3WFbLrlAJQOYfr52LFMLGMB8GA1UdIwQYMBaA
          FHm0WeZ7tuXkAXOACIjIGlj26ZtuMDIGCCsGAQUFBwEBBCYwJDAiBggrBgEFBQcw
          AoYWaHR0cDovL3gxLmkubGVuY3Iub3JnLzAnBgNVHR8EIDAeMBygGqAYhhZodHRw
          Oi8veDEuYy5sZW5jci5vcmcvMCIGA1UdIAQbMBkwCAYGZ4EMAQIBMA0GCysGAQQB
          gt8TAQEBMA0GCSqGSIb3DQEBCwUAA4ICAQCFyk5HPqP3hUSFvNVneLKYY611TR6W
          PTNlclQtgaDqw+34IL9fzLdwALduO/ZelN7kIJ+m74uyA+eitRY8kc607TkC53wl
          ikfmZW4/RvTZ8M6UK+5UzhK8jCdLuMGYL6KvzXGRSgi3yLgjewQtCPkIVz6D2QQz
          CkcheAmCJ8MqyJu5zlzyZMjAvnnAT45tRAxekrsu94sQ4egdRCnbWSDtY7kh+BIm
          lJNXoB1lBMEKIq4QDUOXoRgffuDghje1WrG9ML+Hbisq/yFOGwXD9RiX8F6sw6W4
          avAuvDszue5L3sz85K+EC4Y/wFVDNvZo4TYXao6Z0f+lQKc0t8DQYzk1OXVu8rp2
          yJMC6alLbBfODALZvYH7n7do1AZls4I9d1P4jnkDrQoxB3UqQ9hVl3LEKQ73xF1O
          yK5GhDDX8oVfGKF5u+decIsH4YaTw7mP3GFxJSqv3+0lUFJoi5Lc5da149p90Ids
          hCExroL1+7mryIkXPeFM5TgO9r0rvZaBFOvV2z0gp35Z0+L4WPlbuEjN/lxPFin+
          HlUjr8gRsI3qfJOQFy/9rKIJR0Y/8Omwt/8oTWgy1mdeHmmjk7j1nYsvC9JSQ6Zv
          MldlTTKB3zhThV1+XWYp6rjd5JW1zbVWEkLNxE7GJThEUG3szgBVGP7pSWTUTsqX
          nLRbwHOoq7hHwg==
          -----END CERTIFICATE-----
          -----BEGIN CERTIFICATE-----
          MIIFYDCCBEigAwIBAgIQQAF3ITfU6UK47naqPGQKtzANBgkqhkiG9w0BAQsFADA/
          MSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT
          DkRTVCBSb290IENBIFgzMB4XDTIxMDEyMDE5MTQwM1oXDTI0MDkzMDE4MTQwM1ow
          TzELMAkGA1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2Vh
          cmNoIEdyb3VwMRUwEwYDVQQDEwxJU1JHIFJvb3QgWDEwggIiMA0GCSqGSIb3DQEB
          AQUAA4ICDwAwggIKAoICAQCt6CRz9BQ385ueK1coHIe+3LffOJCMbjzmV6B493XC
          ov71am72AE8o295ohmxEk7axY/0UEmu/H9LqMZshftEzPLpI9d1537O4/xLxIZpL
          wYqGcWlKZmZsj348cL+tKSIG8+TA5oCu4kuPt5l+lAOf00eXfJlII1PoOK5PCm+D
          LtFJV4yAdLbaL9A4jXsDcCEbdfIwPPqPrt3aY6vrFk/CjhFLfs8L6P+1dy70sntK
          4EwSJQxwjQMpoOFTJOwT2e4ZvxCzSow/iaNhUd6shweU9GNx7C7ib1uYgeGJXDR5
          bHbvO5BieebbpJovJsXQEOEO3tkQjhb7t/eo98flAgeYjzYIlefiN5YNNnWe+w5y
          sR2bvAP5SQXYgd0FtCrWQemsAXaVCg/Y39W9Eh81LygXbNKYwagJZHduRze6zqxZ
          Xmidf3LWicUGQSk+WT7dJvUkyRGnWqNMQB9GoZm1pzpRboY7nn1ypxIFeFntPlF4
          FQsDj43QLwWyPntKHEtzBRL8xurgUBN8Q5N0s8p0544fAQjQMNRbcTa0B7rBMDBc
          SLeCO5imfWCKoqMpgsy6vYMEG6KDA0Gh1gXxG8K28Kh8hjtGqEgqiNx2mna/H2ql
          PRmP6zjzZN7IKw0KKP/32+IVQtQi0Cdd4Xn+GOdwiK1O5tmLOsbdJ1Fu/7xk9TND
          TwIDAQABo4IBRjCCAUIwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYw
          SwYIKwYBBQUHAQEEPzA9MDsGCCsGAQUFBzAChi9odHRwOi8vYXBwcy5pZGVudHJ1
          c3QuY29tL3Jvb3RzL2RzdHJvb3RjYXgzLnA3YzAfBgNVHSMEGDAWgBTEp7Gkeyxx
          +tvhS5B1/8QVYIWJEDBUBgNVHSAETTBLMAgGBmeBDAECATA/BgsrBgEEAYLfEwEB
          ATAwMC4GCCsGAQUFBwIBFiJodHRwOi8vY3BzLnJvb3QteDEubGV0c2VuY3J5cHQu
          b3JnMDwGA1UdHwQ1MDMwMaAvoC2GK2h0dHA6Ly9jcmwuaWRlbnRydXN0LmNvbS9E
          U1RST09UQ0FYM0NSTC5jcmwwHQYDVR0OBBYEFHm0WeZ7tuXkAXOACIjIGlj26Ztu
          MA0GCSqGSIb3DQEBCwUAA4IBAQAKcwBslm7/DlLQrt2M51oGrS+o44+/yQoDFVDC
          5WxCu2+b9LRPwkSICHXM6webFGJueN7sJ7o5XPWioW5WlHAQU7G75K/QosMrAdSW
          9MUgNTP52GE24HGNtLi1qoJFlcDyqSMo59ahy2cI2qBDLKobkx/J3vWraV0T9VuG
          WCLKTVXkcGdtwlfFRjlBz4pYg1htmf5X6DYO8A4jqv2Il9DjXA6USbW1FzXSLr9O
          he8Y4IWS6wY7bCkjCWDcRQJMEhg76fsO3txE+FiYruq9RUWhiF1myv4Q6W+CyBFC
          Dfvp7OOGAN6dEOM4+qR9sdjoSYKEBpsr6GtPAQw4dy753ec5
          -----END CERTIFICATE-----
      extraVolumes: |-              
        - name: certauthority
          secret:
            secretName: {{ include "keycloak.fullname" . }}-certauthority
        - name: customreg
          secret:
            secretName: {{ include "keycloak.fullname" . }}-customreg
        - name: realm
          secret:
            secretName: realm
      extraVolumeMounts: |-
        - name: certauthority
          mountPath: /etc/x509/https/cas.pem
          subPath: cas.pem
          readOnly: true
        - name: customreg
          mountPath: /opt/jboss/keycloak/customreg.yaml
          subPath: customreg.yaml
          readOnly: true
        - name: realm
          mountPath: /opt/jboss/keycloak/realm.json
          subPath: realm.json
          readOnly: true
      secrets:
        env:
          stringData:
            CUSTOM_REGISTRATION_CONFIG: /opt/jboss/keycloak/customreg.yaml
            KEYCLOAK_IMPORT: /opt/jboss/keycloak/realm.json
            X509_CA_BUNDLE: /etc/x509/https/cas.pem
        certauthority:
          stringData:
            cas.pem: '{{ .Files.Get "resources/dev/dod_cas.pem" }}'
        realm:
          stringData: |
            {
              "id": "baby-yoda",
              "realm": "baby-yoda",
              "displayName": "DoD Platform One",
              "displayNameHtml": "DevSecOps Collaboration Workspace",
              "notBefore": 0,
              "defaultSignatureAlgorithm": "RS256",
              "revokeRefreshToken": false,
              "refreshTokenMaxReuse": 0,
              "accessTokenLifespan": 300,
              "accessTokenLifespanForImplicitFlow": 900,
              "ssoSessionIdleTimeout": 1800,
              "ssoSessionMaxLifespan": 86400,
              "ssoSessionIdleTimeoutRememberMe": 0,
              "ssoSessionMaxLifespanRememberMe": 0,
              "offlineSessionIdleTimeout": 2592000,
              "offlineSessionMaxLifespanEnabled": false,
              "offlineSessionMaxLifespan": 5184000,
              "clientSessionIdleTimeout": 3600,
              "clientSessionMaxLifespan": 86400,
              "clientOfflineSessionIdleTimeout": 0,
              "clientOfflineSessionMaxLifespan": 0,
              "accessCodeLifespan": 60,
              "accessCodeLifespanUserAction": 300,
              "accessCodeLifespanLogin": 1800,
              "actionTokenGeneratedByAdminLifespan": 43200,
              "actionTokenGeneratedByUserLifespan": 21600,
              "oauth2DeviceCodeLifespan": 600,
              "oauth2DevicePollingInterval": 5,
              "enabled": true,
              "sslRequired": "external",
              "registrationAllowed": true,
              "registrationEmailAsUsername": false,
              "rememberMe": false,
              "verifyEmail": true,
              "loginWithEmailAllowed": true,
              "duplicateEmailsAllowed": false,
              "resetPasswordAllowed": true,
              "editUsernameAllowed": true,
              "bruteForceProtected": true,
              "permanentLockout": true,
              "maxFailureWaitSeconds": 900,
              "minimumQuickLoginWaitSeconds": 60,
              "waitIncrementSeconds": 60,
              "quickLoginCheckMilliSeconds": 1000,
              "maxDeltaTimeSeconds": 43200,
              "failureFactor": 5,
              "roles": {
                "realm": [
                  {
                    "id": "c35fb832-b30f-4f3d-8499-bf101681340c",
                    "name": "offline_access",
                    "description": "${role_offline-access}",
                    "composite": false,
                    "clientRole": false,
                    "containerId": "baby-yoda",
                    "attributes": {}
                  },
                  {
                    "id": "35d729cd-81aa-40bd-bdce-6e4d15ccfb58",
                    "name": "default-roles-baby-yoda",
                    "description": "${role_default-roles}",
                    "composite": true,
                    "composites": {
                      "client": {
                        "account": [
                          "view-profile",
                          "manage-account"
                        ]
                      }
                    },
                    "clientRole": false,
                    "containerId": "baby-yoda",
                    "attributes": {}
                  },
                  {
                    "id": "95d52c1d-ef5b-4a9b-bd21-6b24df3fb034",
                    "name": "uma_authorization",
                    "description": "${role_uma_authorization}",
                    "composite": false,
                    "clientRole": false,
                    "containerId": "baby-yoda",
                    "attributes": {}
                  }
                ],
                "client": {
                  "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_vault": [],
                  "realm-management": [
                    {
                      "id": "85f6c964-c389-47c5-8389-5b25422f0c79",
                      "name": "query-groups",
                      "description": "${role_query-groups}",
                      "composite": false,
                      "clientRole": true,
                      "containerId": "55aa6b66-9150-45ec-b6d8-4f941bcdcc26",
                      "attributes": {}
                    },
                    {
                      "id": "e283d507-1abc-4adc-ade4-99f3d35055a4",
                      "name": "query-realms",
                      "description": "${role_query-realms}",
                      "composite": false,
                      "clientRole": true,
                      "containerId": "55aa6b66-9150-45ec-b6d8-4f941bcdcc26",
                      "attributes": {}
                    },
                    {
                      "id": "afc1d97c-3938-48d0-a1e5-e8b06957c35c",
                      "name": "impersonation",
                      "description": "${role_impersonation}",
                      "composite": false,
                      "clientRole": true,
                      "containerId": "55aa6b66-9150-45ec-b6d8-4f941bcdcc26",
                      "attributes": {}
                    },
                    {
                      "id": "711d4fbe-8da7-4cb9-852c-1a7ef4c2b184",
                      "name": "manage-identity-providers",
                      "description": "${role_manage-identity-providers}",
                      "composite": false,
                      "clientRole": true,
                      "containerId": "55aa6b66-9150-45ec-b6d8-4f941bcdcc26",
                      "attributes": {}
                    },
                    {
                      "id": "e1ba3124-82db-488c-9dec-87fa31d5d0cb",
                      "name": "manage-authorization",
                      "description": "${role_manage-authorization}",
                      "composite": false,
                      "clientRole": true,
                      "containerId": "55aa6b66-9150-45ec-b6d8-4f941bcdcc26",
                      "attributes": {}
                    },
                    {
                      "id": "6b14fc50-b577-4ec4-b6cd-7bc87ed76f35",
                      "name": "manage-realm",
                      "description": "${role_manage-realm}",
                      "composite": false,
                      "clientRole": true,
                      "containerId": "55aa6b66-9150-45ec-b6d8-4f941bcdcc26",
                      "attributes": {}
                    },
                    {
                      "id": "4aa4d009-eb3b-48cb-bb09-6cba77a4757c",
                      "name": "create-client",
                      "description": "${role_create-client}",
                      "composite": false,
                      "clientRole": true,
                      "containerId": "55aa6b66-9150-45ec-b6d8-4f941bcdcc26",
                      "attributes": {}
                    },
                    {
                      "id": "d53d01f5-7bcc-4d5f-8da5-f6593e2ea2cf",
                      "name": "query-users",
                      "description": "${role_query-users}",
                      "composite": false,
                      "clientRole": true,
                      "containerId": "55aa6b66-9150-45ec-b6d8-4f941bcdcc26",
                      "attributes": {}
                    },
                    {
                      "id": "542e2cae-8fd1-43ad-a356-fcc82d677d43",
                      "name": "view-clients",
                      "description": "${role_view-clients}",
                      "composite": true,
                      "composites": {
                        "client": {
                          "realm-management": [
                            "query-clients"
                          ]
                        }
                      },
                      "clientRole": true,
                      "containerId": "55aa6b66-9150-45ec-b6d8-4f941bcdcc26",
                      "attributes": {}
                    },
                    {
                      "id": "4c7ea783-e83b-4928-a174-1eb87c7b00e0",
                      "name": "manage-clients",
                      "description": "${role_manage-clients}",
                      "composite": false,
                      "clientRole": true,
                      "containerId": "55aa6b66-9150-45ec-b6d8-4f941bcdcc26",
                      "attributes": {}
                    },
                    {
                      "id": "27035625-3185-4743-8b17-11ba700cfd58",
                      "name": "view-authorization",
                      "description": "${role_view-authorization}",
                      "composite": false,
                      "clientRole": true,
                      "containerId": "55aa6b66-9150-45ec-b6d8-4f941bcdcc26",
                      "attributes": {}
                    },
                    {
                      "id": "3c513231-6702-4194-8fd6-c38442c2c713",
                      "name": "view-events",
                      "description": "${role_view-events}",
                      "composite": false,
                      "clientRole": true,
                      "containerId": "55aa6b66-9150-45ec-b6d8-4f941bcdcc26",
                      "attributes": {}
                    },
                    {
                      "id": "3bf7df35-ba1f-4bd1-9cee-5de4185b169d",
                      "name": "view-identity-providers",
                      "description": "${role_view-identity-providers}",
                      "composite": false,
                      "clientRole": true,
                      "containerId": "55aa6b66-9150-45ec-b6d8-4f941bcdcc26",
                      "attributes": {}
                    },
                    {
                      "id": "0de8efb7-22ee-4acb-aaf1-5f893945cab9",
                      "name": "manage-users",
                      "description": "${role_manage-users}",
                      "composite": false,
                      "clientRole": true,
                      "containerId": "55aa6b66-9150-45ec-b6d8-4f941bcdcc26",
                      "attributes": {}
                    },
                    {
                      "id": "eb23ec21-bc97-4fd7-8c09-796dec807caf",
                      "name": "manage-events",
                      "description": "${role_manage-events}",
                      "composite": false,
                      "clientRole": true,
                      "containerId": "55aa6b66-9150-45ec-b6d8-4f941bcdcc26",
                      "attributes": {}
                    },
                    {
                      "id": "5a3ac4eb-0d6d-41e6-b39b-d3a1a7ac3b63",
                      "name": "query-clients",
                      "description": "${role_query-clients}",
                      "composite": false,
                      "clientRole": true,
                      "containerId": "55aa6b66-9150-45ec-b6d8-4f941bcdcc26",
                      "attributes": {}
                    },
                    {
                      "id": "67fe2a85-6c04-4fe0-841b-a5c7bf7b8e79",
                      "name": "realm-admin",
                      "description": "${role_realm-admin}",
                      "composite": true,
                      "composites": {
                        "client": {
                          "realm-management": [
                            "query-groups",
                            "query-realms",
                            "impersonation",
                            "manage-identity-providers",
                            "manage-authorization",
                            "manage-realm",
                            "create-client",
                            "query-users",
                            "view-clients",
                            "manage-clients",
                            "view-authorization",
                            "view-events",
                            "view-identity-providers",
                            "manage-users",
                            "manage-events",
                            "query-clients",
                            "view-realm",
                            "view-users"
                          ]
                        }
                      },
                      "clientRole": true,
                      "containerId": "55aa6b66-9150-45ec-b6d8-4f941bcdcc26",
                      "attributes": {}
                    },
                    {
                      "id": "6653d0e1-5473-415f-b4f1-a11120043465",
                      "name": "view-realm",
                      "description": "${role_view-realm}",
                      "composite": false,
                      "clientRole": true,
                      "containerId": "55aa6b66-9150-45ec-b6d8-4f941bcdcc26",
                      "attributes": {}
                    },
                    {
                      "id": "582a162b-08a9-4619-965c-1fb16fbb51ff",
                      "name": "view-users",
                      "description": "${role_view-users}",
                      "composite": true,
                      "composites": {
                        "client": {
                          "realm-management": [
                            "query-groups",
                            "query-users"
                          ]
                        }
                      },
                      "clientRole": true,
                      "containerId": "55aa6b66-9150-45ec-b6d8-4f941bcdcc26",
                      "attributes": {}
                    }
                  ],
                  "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_gitlab": [],
                  "demo-env_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_podinfo": [],
                  "security-admin-console": [],
                  "account-console": [],
                  "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_mattermost": [],
                  "broker": [
                    {
                      "id": "4fc7b3ee-b2f7-4f80-9c2a-06e9f1dda7e7",
                      "name": "read-token",
                      "description": "${role_read-token}",
                      "composite": false,
                      "clientRole": true,
                      "containerId": "cebc0db8-3245-4332-a409-67dc0d2e09dd",
                      "attributes": {}
                    }
                  ],
                  "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_alertmanager": [],
                  "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_anchore": [],
                  "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_twistlock-saml": [],
                  "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_kibana": [],
                  "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_saml-sonarqube": [],
                  "https://nexus.bigbang.dev/service/rest/v1/security/saml/metadata": [],
                  "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_jaeger": [],
                  "admin-cli": [],
                  "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_argocd": [],
                  "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_twistlock-oidc": [],
                  "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_kiali": [],
                  "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_prometheus": [],
                  "account": [
                    {
                      "id": "9a61ae6b-aba7-47d0-a3b1-67e40ac4f5d1",
                      "name": "manage-account-links",
                      "description": "${role_manage-account-links}",
                      "composite": false,
                      "clientRole": true,
                      "containerId": "b6d2395b-3e78-4d61-96cd-3ab2ae0ef7ed",
                      "attributes": {}
                    },
                    {
                      "id": "6ce8a44f-58ad-4daf-a712-570ba03a57d9",
                      "name": "view-profile",
                      "description": "${role_view-profile}",
                      "composite": false,
                      "clientRole": true,
                      "containerId": "b6d2395b-3e78-4d61-96cd-3ab2ae0ef7ed",
                      "attributes": {}
                    },
                    {
                      "id": "5bc3ab5c-56d3-4161-a96b-9a0ea2a9e7cf",
                      "name": "manage-account",
                      "description": "${role_manage-account}",
                      "composite": true,
                      "composites": {
                        "client": {
                          "account": [
                            "manage-account-links"
                          ]
                        }
                      },
                      "clientRole": true,
                      "containerId": "b6d2395b-3e78-4d61-96cd-3ab2ae0ef7ed",
                      "attributes": {}
                    },
                    {
                      "id": "a79d06e0-4a77-4147-bd1c-9979da5cb736",
                      "name": "manage-consent",
                      "description": "${role_manage-consent}",
                      "composite": true,
                      "composites": {
                        "client": {
                          "account": [
                            "view-consent"
                          ]
                        }
                      },
                      "clientRole": true,
                      "containerId": "b6d2395b-3e78-4d61-96cd-3ab2ae0ef7ed",
                      "attributes": {}
                    },
                    {
                      "id": "d979b56a-c653-4363-964f-3b6110b7c8df",
                      "name": "view-consent",
                      "description": "${role_view-consent}",
                      "composite": false,
                      "clientRole": true,
                      "containerId": "b6d2395b-3e78-4d61-96cd-3ab2ae0ef7ed",
                      "attributes": {}
                    },
                    {
                      "id": "d90fa9f0-b4d8-4748-a048-a577995246d0",
                      "name": "delete-account",
                      "description": "${role_delete-account}",
                      "composite": false,
                      "clientRole": true,
                      "containerId": "b6d2395b-3e78-4d61-96cd-3ab2ae0ef7ed",
                      "attributes": {}
                    },
                    {
                      "id": "47d1225e-7cd1-4cea-ac86-bdec61a3833b",
                      "name": "view-applications",
                      "description": "${role_view-applications}",
                      "composite": false,
                      "clientRole": true,
                      "containerId": "b6d2395b-3e78-4d61-96cd-3ab2ae0ef7ed",
                      "attributes": {}
                    }
                  ],
                  "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_grafana": []
                }
              },
              "groups": [
                {
                  "id": "00eb8904-5b88-4c68-ad67-cec0d2e07aa6",
                  "name": "Impact Level 2 Authorized",
                  "path": "/Impact Level 2 Authorized",
                  "attributes": {
                    "il2": [
                      "true"
                    ]
                  },
                  "realmRoles": [],
                  "clientRoles": {},
                  "subGroups": []
                },
                {
                  "id": "95a210e4-2cb7-4dfe-aaba-68ee4ce5e2f7",
                  "name": "Nexus",
                  "path": "/Nexus",
                  "attributes": {},
                  "realmRoles": [],
                  "clientRoles": {},
                  "subGroups": []
                },
                {
                  "id": "05f1d35f-3fc3-4958-9ed1-ac9568064e52",
                  "name": "User admins",
                  "path": "/User admins",
                  "attributes": {},
                  "realmRoles": [],
                  "clientRoles": {
                    "realm-management": [
                      "view-events",
                      "manage-users",
                      "view-users"
                    ]
                  },
                  "subGroups": []
                },
                {
                  "id": "d455b296-d2fe-481e-ab4b-a1543205c99e",
                  "name": "vault-admin",
                  "path": "/vault-admin",
                  "attributes": {},
                  "realmRoles": [],
                  "clientRoles": {},
                  "subGroups": []
                }
              ],
              "defaultRole": {
                "id": "35d729cd-81aa-40bd-bdce-6e4d15ccfb58",
                "name": "default-roles-baby-yoda",
                "description": "${role_default-roles}",
                "composite": true,
                "clientRole": false,
                "containerId": "baby-yoda"
              },
              "requiredCredentials": [
                "password"
              ],
              "passwordPolicy": "hashAlgorithm(pbkdf2-sha256) and forceExpiredPasswordChange(90) and specialChars(2) and passwordHistory(5) and length(12) and notUsername(undefined)",
              "otpPolicyType": "totp",
              "otpPolicyAlgorithm": "HmacSHA1",
              "otpPolicyInitialCounter": 0,
              "otpPolicyDigits": 6,
              "otpPolicyLookAheadWindow": 3,
              "otpPolicyPeriod": 30,
              "otpSupportedApplications": [
                "FreeOTP",
                "Google Authenticator"
              ],
              "webAuthnPolicyRpEntityName": "keycloak",
              "webAuthnPolicySignatureAlgorithms": [
                "ES256"
              ],
              "webAuthnPolicyRpId": "",
              "webAuthnPolicyAttestationConveyancePreference": "not specified",
              "webAuthnPolicyAuthenticatorAttachment": "not specified",
              "webAuthnPolicyRequireResidentKey": "not specified",
              "webAuthnPolicyUserVerificationRequirement": "not specified",
              "webAuthnPolicyCreateTimeout": 0,
              "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
              "webAuthnPolicyAcceptableAaguids": [],
              "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
              "webAuthnPolicyPasswordlessSignatureAlgorithms": [
                "ES256"
              ],
              "webAuthnPolicyPasswordlessRpId": "",
              "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
              "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
              "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
              "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
              "webAuthnPolicyPasswordlessCreateTimeout": 0,
              "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
              "webAuthnPolicyPasswordlessAcceptableAaguids": [],
              "scopeMappings": [
                {
                  "clientScope": "offline_access",
                  "roles": [
                    "offline_access"
                  ]
                }
              ],
              "clientScopeMappings": {
                "account": [
                  {
                    "client": "account-console",
                    "roles": [
                      "manage-account"
                    ]
                  }
                ]
              },
              "clients": [
                {
                  "id": "b6d2395b-3e78-4d61-96cd-3ab2ae0ef7ed",
                  "clientId": "account",
                  "name": "<h1>Developer</h1><h4>Account Login</h4>",
                  "description": "https://repo1.dso.mil/platform-one/big-bang/apps/security-tools/keycloak/-/raw/main/development/plugin/src/main/resources/theme/p1-sso/custom-resources/img/nerd.png",
                  "rootUrl": "${authBaseUrl}",
                  "baseUrl": "/realms/baby-yoda/account/",
                  "surrogateAuthRequired": false,
                  "enabled": true,
                  "alwaysDisplayInConsole": false,
                  "clientAuthenticatorType": "client-secret",
                  "secret": "**********",
                  "redirectUris": [
                    "/realms/baby-yoda/account/*"
                  ],
                  "webOrigins": [],
                  "notBefore": 0,
                  "bearerOnly": false,
                  "consentRequired": false,
                  "standardFlowEnabled": true,
                  "implicitFlowEnabled": false,
                  "directAccessGrantsEnabled": false,
                  "serviceAccountsEnabled": false,
                  "publicClient": false,
                  "frontchannelLogout": false,
                  "protocol": "openid-connect",
                  "attributes": {},
                  "authenticationFlowBindingOverrides": {},
                  "fullScopeAllowed": false,
                  "nodeReRegistrationTimeout": 0,
                  "defaultClientScopes": [],
                  "optionalClientScopes": []
                },
                {
                  "id": "d2c0ffd9-0c25-469a-9c05-6bbebe2054bc",
                  "clientId": "account-console",
                  "name": "${client_account-console}",
                  "rootUrl": "${authBaseUrl}",
                  "baseUrl": "/realms/baby-yoda/account/",
                  "surrogateAuthRequired": false,
                  "enabled": true,
                  "alwaysDisplayInConsole": false,
                  "clientAuthenticatorType": "client-secret",
                  "secret": "**********",
                  "redirectUris": [
                    "/realms/baby-yoda/account/*"
                  ],
                  "webOrigins": [],
                  "notBefore": 0,
                  "bearerOnly": false,
                  "consentRequired": false,
                  "standardFlowEnabled": true,
                  "implicitFlowEnabled": false,
                  "directAccessGrantsEnabled": false,
                  "serviceAccountsEnabled": false,
                  "publicClient": true,
                  "frontchannelLogout": false,
                  "protocol": "openid-connect",
                  "attributes": {
                    "pkce.code.challenge.method": "S256"
                  },
                  "authenticationFlowBindingOverrides": {},
                  "fullScopeAllowed": false,
                  "nodeReRegistrationTimeout": 0,
                  "protocolMappers": [
                    {
                      "id": "08a20b0e-4ab7-403a-898c-a4ed59d7be80",
                      "name": "audience resolve",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-audience-resolve-mapper",
                      "consentRequired": false,
                      "config": {}
                    }
                  ],
                  "defaultClientScopes": [],
                  "optionalClientScopes": []
                },
                {
                  "id": "337ba4c2-5755-41ba-b87a-a67b2f7989b1",
                  "clientId": "admin-cli",
                  "name": "${client_admin-cli}",
                  "surrogateAuthRequired": false,
                  "enabled": true,
                  "alwaysDisplayInConsole": false,
                  "clientAuthenticatorType": "client-secret",
                  "secret": "**********",
                  "redirectUris": [],
                  "webOrigins": [],
                  "notBefore": 0,
                  "bearerOnly": false,
                  "consentRequired": false,
                  "standardFlowEnabled": false,
                  "implicitFlowEnabled": false,
                  "directAccessGrantsEnabled": true,
                  "serviceAccountsEnabled": false,
                  "publicClient": true,
                  "frontchannelLogout": false,
                  "protocol": "openid-connect",
                  "attributes": {},
                  "authenticationFlowBindingOverrides": {},
                  "fullScopeAllowed": false,
                  "nodeReRegistrationTimeout": 0,
                  "defaultClientScopes": [],
                  "optionalClientScopes": []
                },
                {
                  "id": "cebc0db8-3245-4332-a409-67dc0d2e09dd",
                  "clientId": "broker",
                  "name": "${client_broker}",
                  "surrogateAuthRequired": false,
                  "enabled": true,
                  "alwaysDisplayInConsole": false,
                  "clientAuthenticatorType": "client-secret",
                  "secret": "**********",
                  "redirectUris": [],
                  "webOrigins": [],
                  "notBefore": 0,
                  "bearerOnly": false,
                  "consentRequired": false,
                  "standardFlowEnabled": true,
                  "implicitFlowEnabled": false,
                  "directAccessGrantsEnabled": false,
                  "serviceAccountsEnabled": false,
                  "publicClient": false,
                  "frontchannelLogout": false,
                  "protocol": "openid-connect",
                  "attributes": {},
                  "authenticationFlowBindingOverrides": {},
                  "fullScopeAllowed": false,
                  "nodeReRegistrationTimeout": 0,
                  "defaultClientScopes": [],
                  "optionalClientScopes": []
                },
                {
                  "id": "87ed7819-bbd3-4858-89cb-2554557c4252",
                  "clientId": "demo-env_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_podinfo",
                  "surrogateAuthRequired": false,
                  "enabled": true,
                  "alwaysDisplayInConsole": false,
                  "clientAuthenticatorType": "client-secret",
                  "secret": "l50TlHvzDgz8W3vPrdloO59drXPOerrg",
                  "redirectUris": [
                    "https://podinfo.bigbang.dev/login/generic_oauth"
                  ],
                  "webOrigins": [],
                  "notBefore": 0,
                  "bearerOnly": false,
                  "consentRequired": false,
                  "standardFlowEnabled": true,
                  "implicitFlowEnabled": false,
                  "directAccessGrantsEnabled": true,
                  "serviceAccountsEnabled": false,
                  "publicClient": false,
                  "frontchannelLogout": false,
                  "protocol": "openid-connect",
                  "attributes": {
                    "saml.force.post.binding": "false",
                    "saml.multivalued.roles": "false",
                    "frontchannel.logout.session.required": "false",
                    "oauth2.device.authorization.grant.enabled": "false",
                    "backchannel.logout.revoke.offline.tokens": "false",
                    "saml.server.signature.keyinfo.ext": "false",
                    "use.refresh.tokens": "true",
                    "oidc.ciba.grant.enabled": "false",
                    "backchannel.logout.session.required": "true",
                    "client_credentials.use_refresh_token": "false",
                    "require.pushed.authorization.requests": "false",
                    "saml.client.signature": "false",
                    "saml.allow.ecp.flow": "false",
                    "id.token.as.detached.signature": "false",
                    "saml.assertion.signature": "false",
                    "client.secret.creation.time": "1670454992",
                    "saml.encrypt": "false",
                    "saml.server.signature": "false",
                    "exclude.session.state.from.auth.response": "false",
                    "saml.artifact.binding": "false",
                    "saml_force_name_id_format": "false",
                    "acr.loa.map": "{}",
                    "tls.client.certificate.bound.access.tokens": "false",
                    "saml.authnstatement": "false",
                    "display.on.consent.screen": "false",
                    "token.response.type.bearer.lower-case": "false",
                    "saml.onetimeuse.condition": "false"
                  },
                  "authenticationFlowBindingOverrides": {},
                  "fullScopeAllowed": true,
                  "nodeReRegistrationTimeout": -1,
                  "defaultClientScopes": [
                    "web-origins",
                    "acr",
                    "roles",
                    "profile",
                    "email"
                  ],
                  "optionalClientScopes": [
                    "address",
                    "phone",
                    "offline_access",
                    "microprofile-jwt"
                  ]
                },
                {
                  "id": "7888d11f-d0c7-4e6d-860c-5206665552d3",
                  "clientId": "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_alertmanager",
                  "name": "BigBang Dev AlertManager",
                  "baseUrl": "",
                  "surrogateAuthRequired": false,
                  "enabled": true,
                  "alwaysDisplayInConsole": false,
                  "clientAuthenticatorType": "client-secret",
                  "redirectUris": [
                    "https://alertmanager.bigbang.dev/login/generic_oauth",
                    "https://alertmanager.dogfood.bigbang.dev/login/generic_oauth"
                  ],
                  "webOrigins": [],
                  "notBefore": 0,
                  "bearerOnly": false,
                  "consentRequired": true,
                  "standardFlowEnabled": true,
                  "implicitFlowEnabled": false,
                  "directAccessGrantsEnabled": false,
                  "serviceAccountsEnabled": false,
                  "publicClient": true,
                  "frontchannelLogout": false,
                  "protocol": "openid-connect",
                  "attributes": {
                    "saml.assertion.signature": "false",
                    "saml.multivalued.roles": "false",
                    "saml.force.post.binding": "false",
                    "saml.encrypt": "false",
                    "saml.server.signature": "false",
                    "backchannel.logout.revoke.offline.tokens": "false",
                    "saml.server.signature.keyinfo.ext": "false",
                    "exclude.session.state.from.auth.response": "false",
                    "backchannel.logout.session.required": "true",
                    "consent.screen.text": "This client is used for development support for Big Bang / Platform One.  Be sure that you are only using this client for development.",
                    "saml_force_name_id_format": "false",
                    "saml.client.signature": "false",
                    "tls.client.certificate.bound.access.tokens": "false",
                    "saml.authnstatement": "false",
                    "display.on.consent.screen": "true",
                    "saml.onetimeuse.condition": "false"
                  },
                  "authenticationFlowBindingOverrides": {},
                  "fullScopeAllowed": true,
                  "nodeReRegistrationTimeout": -1,
                  "defaultClientScopes": [
                    "web-origins",
                    "roles",
                    "profile",
                    "email"
                  ],
                  "optionalClientScopes": []
                },
                {
                  "id": "ec39f333-e4ce-434e-9cf1-f39651915b37",
                  "clientId": "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_anchore",
                  "name": "BigBang Dev Anchore",
                  "adminUrl": "https://anchore.bigbang.dev/service/sso/auth/keycloak",
                  "baseUrl": "",
                  "surrogateAuthRequired": false,
                  "enabled": true,
                  "alwaysDisplayInConsole": false,
                  "clientAuthenticatorType": "client-secret",
                  "redirectUris": [
                    "https://anchore.dogfood.bigbang.dev/service/sso/auth/keycloak",
                    "https://anchore.bigbang.dev/service/sso/auth/keycloak"
                  ],
                  "webOrigins": [],
                  "notBefore": 0,
                  "bearerOnly": false,
                  "consentRequired": true,
                  "standardFlowEnabled": true,
                  "implicitFlowEnabled": false,
                  "directAccessGrantsEnabled": false,
                  "serviceAccountsEnabled": false,
                  "publicClient": true,
                  "frontchannelLogout": true,
                  "protocol": "saml",
                  "attributes": {
                    "saml_assertion_consumer_url_redirect": "https://anchore.bigbang.dev/service/sso/auth/keycloak",
                    "saml.multivalued.roles": "false",
                    "saml.force.post.binding": "true",
                    "oauth2.device.authorization.grant.enabled": "false",
                    "backchannel.logout.revoke.offline.tokens": "false",
                    "saml.server.signature.keyinfo.ext": "false",
                    "use.refresh.tokens": "true",
                    "oidc.ciba.grant.enabled": "false",
                    "backchannel.logout.session.required": "false",
                    "saml.signature.algorithm": "RSA_SHA256",
                    "client_credentials.use_refresh_token": "false",
                    "consent.screen.text": "This client is used for development support for Big Bang / Platform One.  Be sure that you are only using this client for development.",
                    "saml.client.signature": "false",
                    "saml.assertion.signature": "true",
                    "id.token.as.detached.signature": "false",
                    "saml.encrypt": "false",
                    "saml_assertion_consumer_url_post": "https://anchore.bigbang.dev/service/sso/auth/keycloak",
                    "saml.server.signature": "true",
                    "exclude.session.state.from.auth.response": "false",
                    "saml.artifact.binding.identifier": "7CotOBSAei1i2frOht5AFaONGy0=",
                    "saml.artifact.binding": "false",
                    "saml_force_name_id_format": "true",
                    "tls.client.certificate.bound.access.tokens": "false",
                    "saml.authnstatement": "true",
                    "display.on.consent.screen": "true",
                    "saml_name_id_format": "username",
                    "saml.onetimeuse.condition": "false",
                    "saml_signature_canonicalization_method": "http://www.w3.org/2001/10/xml-exc-c14n#"
                  },
                  "authenticationFlowBindingOverrides": {},
                  "fullScopeAllowed": true,
                  "nodeReRegistrationTimeout": -1,
                  "defaultClientScopes": [
                    "role_list"
                  ],
                  "optionalClientScopes": []
                },
                {
                  "id": "c0e00463-3c60-4d8f-80f4-881e13c1a2dd",
                  "clientId": "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_argocd",
                  "name": "BigBang Dev ArgoCD",
                  "baseUrl": "/applications",
                  "surrogateAuthRequired": false,
                  "enabled": true,
                  "alwaysDisplayInConsole": false,
                  "clientAuthenticatorType": "client-secret",
                  "redirectUris": [
                    "https://argocd.dogfood.bigbang.dev/auth/callback",
                    "https://argocd.bigbang.dev/auth/callback"
                  ],
                  "webOrigins": [],
                  "notBefore": 0,
                  "bearerOnly": false,
                  "consentRequired": true,
                  "standardFlowEnabled": true,
                  "implicitFlowEnabled": false,
                  "directAccessGrantsEnabled": false,
                  "serviceAccountsEnabled": false,
                  "publicClient": true,
                  "frontchannelLogout": false,
                  "protocol": "openid-connect",
                  "attributes": {
                    "saml.assertion.signature": "false",
                    "id.token.as.detached.signature": "false",
                    "saml.multivalued.roles": "false",
                    "saml.force.post.binding": "false",
                    "saml.encrypt": "false",
                    "oauth2.device.authorization.grant.enabled": "false",
                    "saml.server.signature": "false",
                    "backchannel.logout.revoke.offline.tokens": "false",
                    "saml.server.signature.keyinfo.ext": "false",
                    "use.refresh.tokens": "true",
                    "exclude.session.state.from.auth.response": "false",
                    "oidc.ciba.grant.enabled": "false",
                    "saml.artifact.binding": "false",
                    "backchannel.logout.session.required": "true",
                    "client_credentials.use_refresh_token": "false",
                    "consent.screen.text": "This client is used for development support for Big Bang / Platform One.  Be sure that you are only using this client for development.",
                    "saml_force_name_id_format": "false",
                    "saml.client.signature": "false",
                    "tls.client.certificate.bound.access.tokens": "false",
                    "saml.authnstatement": "false",
                    "display.on.consent.screen": "true",
                    "saml.onetimeuse.condition": "false"
                  },
                  "authenticationFlowBindingOverrides": {},
                  "fullScopeAllowed": true,
                  "nodeReRegistrationTimeout": -1,
                  "defaultClientScopes": [
                    "ArgoCD"
                  ],
                  "optionalClientScopes": []
                },
                {
                  "id": "d07709ea-eec1-4fb4-82ab-d52cf70bce15",
                  "clientId": "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_gitlab",
                  "name": "BigBang Dev Gitlab",
                  "baseUrl": "",
                  "surrogateAuthRequired": false,
                  "enabled": true,
                  "alwaysDisplayInConsole": false,
                  "clientAuthenticatorType": "client-secret",
                  "redirectUris": [
                    "https://code.bigbang.dev/users/auth/openid_connect/callback*",
                    "https://code.dogfood.bigbang.dev/users/auth/openid_connect/callback*",
                    "https://gitlab.bigbang.dev/users/auth/openid_connect/callback*",
                    "https://gitlab.dogfood.bigbang.dev/users/auth/openid_connect/callback*"
                  ],
                  "webOrigins": [],
                  "notBefore": 0,
                  "bearerOnly": false,
                  "consentRequired": true,
                  "standardFlowEnabled": true,
                  "implicitFlowEnabled": false,
                  "directAccessGrantsEnabled": false,
                  "serviceAccountsEnabled": false,
                  "publicClient": true,
                  "frontchannelLogout": false,
                  "protocol": "openid-connect",
                  "attributes": {
                    "saml.assertion.signature": "false",
                    "id.token.as.detached.signature": "false",
                    "saml.force.post.binding": "false",
                    "saml.multivalued.roles": "false",
                    "saml.encrypt": "false",
                    "oauth2.device.authorization.grant.enabled": "false",
                    "backchannel.logout.revoke.offline.tokens": "false",
                    "saml.server.signature": "false",
                    "saml.server.signature.keyinfo.ext": "false",
                    "use.refresh.tokens": "true",
                    "exclude.session.state.from.auth.response": "false",
                    "oidc.ciba.grant.enabled": "false",
                    "saml.artifact.binding": "false",
                    "backchannel.logout.session.required": "true",
                    "client_credentials.use_refresh_token": "false",
                    "consent.screen.text": "This client is used for development support for Big Bang / Platform One.  Be sure that you are only using this client for development.",
                    "saml_force_name_id_format": "false",
                    "saml.client.signature": "false",
                    "tls.client.certificate.bound.access.tokens": "false",
                    "saml.authnstatement": "false",
                    "display.on.consent.screen": "true",
                    "saml.onetimeuse.condition": "false"
                  },
                  "authenticationFlowBindingOverrides": {},
                  "fullScopeAllowed": true,
                  "nodeReRegistrationTimeout": -1,
                  "defaultClientScopes": [
                    "Gitlab"
                  ],
                  "optionalClientScopes": []
                },
                {
                  "id": "cd756309-03fe-4bfa-a544-a7de3e2a4825",
                  "clientId": "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_grafana",
                  "name": "BigBang Dev Grafana",
                  "baseUrl": "",
                  "surrogateAuthRequired": false,
                  "enabled": true,
                  "alwaysDisplayInConsole": false,
                  "clientAuthenticatorType": "client-secret",
                  "redirectUris": [
                    "https://grafana.dogfood.bigbang.dev/login/generic_oauth",
                    "https://grafana.bigbang.dev/login/generic_oauth"
                  ],
                  "webOrigins": [],
                  "notBefore": 0,
                  "bearerOnly": false,
                  "consentRequired": true,
                  "standardFlowEnabled": true,
                  "implicitFlowEnabled": false,
                  "directAccessGrantsEnabled": false,
                  "serviceAccountsEnabled": false,
                  "publicClient": true,
                  "frontchannelLogout": false,
                  "protocol": "openid-connect",
                  "attributes": {
                    "saml.assertion.signature": "false",
                    "id.token.as.detached.signature": "false",
                    "saml.multivalued.roles": "false",
                    "saml.force.post.binding": "false",
                    "saml.encrypt": "false",
                    "oauth2.device.authorization.grant.enabled": "false",
                    "saml.server.signature": "false",
                    "backchannel.logout.revoke.offline.tokens": "false",
                    "saml.server.signature.keyinfo.ext": "false",
                    "use.refresh.tokens": "true",
                    "exclude.session.state.from.auth.response": "false",
                    "oidc.ciba.grant.enabled": "false",
                    "saml.artifact.binding": "false",
                    "backchannel.logout.session.required": "true",
                    "client_credentials.use_refresh_token": "false",
                    "consent.screen.text": "This client is used for development support for Big Bang / Platform One.  Be sure that you are only using this client for development.",
                    "saml_force_name_id_format": "false",
                    "saml.client.signature": "false",
                    "tls.client.certificate.bound.access.tokens": "false",
                    "saml.authnstatement": "false",
                    "display.on.consent.screen": "true",
                    "saml.onetimeuse.condition": "false"
                  },
                  "authenticationFlowBindingOverrides": {},
                  "fullScopeAllowed": true,
                  "nodeReRegistrationTimeout": -1,
                  "defaultClientScopes": [
                    "Grafana"
                  ],
                  "optionalClientScopes": []
                },
                {
                  "id": "5b31df1f-b6cf-423c-b2ed-18ff35e9eb6f",
                  "clientId": "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_jaeger",
                  "surrogateAuthRequired": false,
                  "enabled": true,
                  "alwaysDisplayInConsole": false,
                  "clientAuthenticatorType": "client-secret",
                  "redirectUris": [
                    "https://tracing.bigbang.dev/login"
                  ],
                  "webOrigins": [],
                  "notBefore": 0,
                  "bearerOnly": false,
                  "consentRequired": false,
                  "standardFlowEnabled": true,
                  "implicitFlowEnabled": false,
                  "directAccessGrantsEnabled": false,
                  "serviceAccountsEnabled": false,
                  "publicClient": true,
                  "frontchannelLogout": false,
                  "protocol": "openid-connect",
                  "attributes": {
                    "saml.assertion.signature": "false",
                    "id.token.as.detached.signature": "false",
                    "saml.multivalued.roles": "false",
                    "saml.force.post.binding": "false",
                    "saml.encrypt": "false",
                    "oauth2.device.authorization.grant.enabled": "false",
                    "backchannel.logout.revoke.offline.tokens": "false",
                    "saml.server.signature": "false",
                    "saml.server.signature.keyinfo.ext": "false",
                    "use.refresh.tokens": "true",
                    "exclude.session.state.from.auth.response": "false",
                    "oidc.ciba.grant.enabled": "false",
                    "saml.artifact.binding": "false",
                    "backchannel.logout.session.required": "true",
                    "client_credentials.use_refresh_token": "false",
                    "saml_force_name_id_format": "false",
                    "saml.client.signature": "false",
                    "tls.client.certificate.bound.access.tokens": "false",
                    "saml.authnstatement": "false",
                    "display.on.consent.screen": "false",
                    "saml.onetimeuse.condition": "false"
                  },
                  "authenticationFlowBindingOverrides": {},
                  "fullScopeAllowed": true,
                  "nodeReRegistrationTimeout": -1,
                  "defaultClientScopes": [
                    "web-origins",
                    "roles",
                    "profile",
                    "email"
                  ],
                  "optionalClientScopes": [
                    "address",
                    "phone",
                    "offline_access",
                    "microprofile-jwt"
                  ]
                },
                {
                  "id": "fb41d5e6-dc17-4c88-90d3-adfdaa08d1b8",
                  "clientId": "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_kiali",
                  "name": "BigBang Dev Kiali",
                  "rootUrl": "https://kiali.bigbang.dev/kiali",
                  "adminUrl": "https://kiali.bigbang.dev/kiali",
                  "baseUrl": "",
                  "surrogateAuthRequired": false,
                  "enabled": true,
                  "alwaysDisplayInConsole": false,
                  "clientAuthenticatorType": "client-secret",
                  "redirectUris": [
                    "https://kiali.bigbang.dev/kiali/*",
                    "https://kiali.dogfood.bigbang.dev/kiali/*"
                  ],
                  "webOrigins": [],
                  "notBefore": 0,
                  "bearerOnly": false,
                  "consentRequired": true,
                  "standardFlowEnabled": true,
                  "implicitFlowEnabled": false,
                  "directAccessGrantsEnabled": false,
                  "serviceAccountsEnabled": false,
                  "publicClient": true,
                  "frontchannelLogout": false,
                  "protocol": "openid-connect",
                  "attributes": {
                    "saml.assertion.signature": "false",
                    "id.token.as.detached.signature": "false",
                    "saml.multivalued.roles": "false",
                    "saml.force.post.binding": "false",
                    "saml.encrypt": "false",
                    "oauth2.device.authorization.grant.enabled": "false",
                    "saml.server.signature": "false",
                    "backchannel.logout.revoke.offline.tokens": "false",
                    "saml.server.signature.keyinfo.ext": "false",
                    "use.refresh.tokens": "true",
                    "exclude.session.state.from.auth.response": "false",
                    "oidc.ciba.grant.enabled": "false",
                    "saml.artifact.binding": "false",
                    "backchannel.logout.session.required": "true",
                    "client_credentials.use_refresh_token": "false",
                    "consent.screen.text": "This client is used for development support for Big Bang / Platform One.  Be sure that you are only using this client for development.",
                    "saml_force_name_id_format": "false",
                    "saml.client.signature": "false",
                    "tls.client.certificate.bound.access.tokens": "false",
                    "saml.authnstatement": "false",
                    "display.on.consent.screen": "true",
                    "saml.onetimeuse.condition": "false"
                  },
                  "authenticationFlowBindingOverrides": {},
                  "fullScopeAllowed": true,
                  "nodeReRegistrationTimeout": -1,
                  "defaultClientScopes": [
                    "web-origins",
                    "roles",
                    "profile",
                    "email"
                  ],
                  "optionalClientScopes": [
                    "address",
                    "phone",
                    "offline_access",
                    "microprofile-jwt"
                  ]
                },
                {
                  "id": "23ec72c7-03e6-4155-88cb-7c376f6a5d54",
                  "clientId": "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_kibana",
                  "name": "BigBang Dev Kibana",
                  "baseUrl": "",
                  "surrogateAuthRequired": false,
                  "enabled": true,
                  "alwaysDisplayInConsole": false,
                  "clientAuthenticatorType": "client-secret",
                  "redirectUris": [
                    "https://kibana.dogfood.bigbang.dev/*",
                    "https://kibana.bigbang.dev/*"
                  ],
                  "webOrigins": [],
                  "notBefore": 0,
                  "bearerOnly": false,
                  "consentRequired": true,
                  "standardFlowEnabled": true,
                  "implicitFlowEnabled": false,
                  "directAccessGrantsEnabled": false,
                  "serviceAccountsEnabled": false,
                  "publicClient": true,
                  "frontchannelLogout": false,
                  "protocol": "openid-connect",
                  "attributes": {
                    "saml.assertion.signature": "false",
                    "id.token.as.detached.signature": "false",
                    "saml.multivalued.roles": "false",
                    "saml.force.post.binding": "false",
                    "saml.encrypt": "false",
                    "oauth2.device.authorization.grant.enabled": "false",
                    "saml.server.signature": "false",
                    "backchannel.logout.revoke.offline.tokens": "false",
                    "saml.server.signature.keyinfo.ext": "false",
                    "use.refresh.tokens": "true",
                    "exclude.session.state.from.auth.response": "false",
                    "oidc.ciba.grant.enabled": "false",
                    "saml.artifact.binding": "false",
                    "backchannel.logout.session.required": "true",
                    "client_credentials.use_refresh_token": "false",
                    "consent.screen.text": "This client is used for development support for Big Bang / Platform One.  Be sure that you are only using this client for development.",
                    "saml_force_name_id_format": "false",
                    "saml.client.signature": "false",
                    "tls.client.certificate.bound.access.tokens": "false",
                    "saml.authnstatement": "false",
                    "display.on.consent.screen": "true",
                    "saml.onetimeuse.condition": "false"
                  },
                  "authenticationFlowBindingOverrides": {},
                  "fullScopeAllowed": true,
                  "nodeReRegistrationTimeout": -1,
                  "defaultClientScopes": [
                    "elastic"
                  ],
                  "optionalClientScopes": []
                },
                {
                  "id": "8cc2a9e0-f96e-4d36-a955-f9c12285bf98",
                  "clientId": "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_mattermost",
                  "name": "BigBang Dev Mattermost",
                  "surrogateAuthRequired": false,
                  "enabled": true,
                  "alwaysDisplayInConsole": false,
                  "clientAuthenticatorType": "client-secret",
                  "redirectUris": [
                    "https://chat.dogfood.bigbang.dev/signup/gitlab/complete",
                    "https://chat.bigbang.dev/login/gitlab/complete",
                    "https://chat.bigbang.dev/signup/gitlab/complete",
                    "https://chat.dogfood.bigbang.dev/login/gitlab/complete"
                  ],
                  "webOrigins": [],
                  "notBefore": 0,
                  "bearerOnly": false,
                  "consentRequired": true,
                  "standardFlowEnabled": true,
                  "implicitFlowEnabled": false,
                  "directAccessGrantsEnabled": false,
                  "serviceAccountsEnabled": false,
                  "publicClient": true,
                  "frontchannelLogout": false,
                  "protocol": "openid-connect",
                  "attributes": {
                    "saml.assertion.signature": "false",
                    "id.token.as.detached.signature": "false",
                    "saml.force.post.binding": "false",
                    "saml.multivalued.roles": "false",
                    "saml.encrypt": "false",
                    "oauth2.device.authorization.grant.enabled": "false",
                    "backchannel.logout.revoke.offline.tokens": "false",
                    "saml.server.signature": "false",
                    "saml.server.signature.keyinfo.ext": "false",
                    "use.refresh.tokens": "true",
                    "exclude.session.state.from.auth.response": "false",
                    "oidc.ciba.grant.enabled": "false",
                    "saml.artifact.binding": "false",
                    "backchannel.logout.session.required": "true",
                    "client_credentials.use_refresh_token": "false",
                    "consent.screen.text": "This client is used for development support for Big Bang / Platform One.  Be sure that you are only using this client for development.",
                    "saml_force_name_id_format": "false",
                    "saml.client.signature": "false",
                    "tls.client.certificate.bound.access.tokens": "false",
                    "saml.authnstatement": "false",
                    "display.on.consent.screen": "true",
                    "saml.onetimeuse.condition": "false"
                  },
                  "authenticationFlowBindingOverrides": {},
                  "fullScopeAllowed": true,
                  "nodeReRegistrationTimeout": -1,
                  "protocolMappers": [
                    {
                      "id": "2386a517-1092-4ee9-ad72-6996eb23cd93",
                      "name": "email",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-usermodel-property-mapper",
                      "consentRequired": false,
                      "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "email",
                        "id.token.claim": "false",
                        "access.token.claim": "false",
                        "claim.name": "email",
                        "jsonType.label": "String"
                      }
                    },
                    {
                      "id": "028a101a-8b18-4501-b26b-95d29b95bff6",
                      "name": "mattermostid",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-usermodel-attribute-mapper",
                      "consentRequired": false,
                      "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "mattermostid",
                        "id.token.claim": "false",
                        "access.token.claim": "false",
                        "claim.name": "id",
                        "jsonType.label": "long"
                      }
                    },
                    {
                      "id": "005d9eae-0288-4180-8bc8-ac05ab1145ff",
                      "name": "username",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-usermodel-property-mapper",
                      "consentRequired": false,
                      "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "username",
                        "id.token.claim": "false",
                        "access.token.claim": "false",
                        "claim.name": "username",
                        "jsonType.label": "String"
                      }
                    }
                  ],
                  "defaultClientScopes": [],
                  "optionalClientScopes": []
                },
                {
                  "id": "7dd8ea36-bf2a-4561-be21-be5ab880a26d",
                  "clientId": "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_prometheus",
                  "name": "BigBang Dev Prometheus",
                  "baseUrl": "",
                  "surrogateAuthRequired": false,
                  "enabled": true,
                  "alwaysDisplayInConsole": false,
                  "clientAuthenticatorType": "client-secret",
                  "redirectUris": [
                    "https://prometheus.bigbang.dev/login/generic_oauth",
                    "https://prometheus.dogfood.bigbang.dev/login/generic_oauth"
                  ],
                  "webOrigins": [],
                  "notBefore": 0,
                  "bearerOnly": false,
                  "consentRequired": true,
                  "standardFlowEnabled": true,
                  "implicitFlowEnabled": false,
                  "directAccessGrantsEnabled": false,
                  "serviceAccountsEnabled": false,
                  "publicClient": true,
                  "frontchannelLogout": false,
                  "protocol": "openid-connect",
                  "attributes": {
                    "saml.assertion.signature": "false",
                    "id.token.as.detached.signature": "false",
                    "saml.multivalued.roles": "false",
                    "saml.force.post.binding": "false",
                    "saml.encrypt": "false",
                    "oauth2.device.authorization.grant.enabled": "false",
                    "saml.server.signature": "false",
                    "backchannel.logout.revoke.offline.tokens": "false",
                    "saml.server.signature.keyinfo.ext": "false",
                    "use.refresh.tokens": "true",
                    "exclude.session.state.from.auth.response": "false",
                    "oidc.ciba.grant.enabled": "false",
                    "saml.artifact.binding": "false",
                    "backchannel.logout.session.required": "true",
                    "client_credentials.use_refresh_token": "false",
                    "consent.screen.text": "This client is used for development support for Big Bang / Platform One.  Be sure that you are only using this client for development.",
                    "saml_force_name_id_format": "false",
                    "saml.client.signature": "false",
                    "tls.client.certificate.bound.access.tokens": "false",
                    "saml.authnstatement": "false",
                    "display.on.consent.screen": "true",
                    "saml.onetimeuse.condition": "false"
                  },
                  "authenticationFlowBindingOverrides": {},
                  "fullScopeAllowed": true,
                  "nodeReRegistrationTimeout": -1,
                  "defaultClientScopes": [
                    "web-origins",
                    "roles",
                    "profile",
                    "email"
                  ],
                  "optionalClientScopes": []
                },
                {
                  "id": "791069b6-6d5c-478b-8bf1-932232a4f227",
                  "clientId": "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_saml-sonarqube",
                  "name": "BigBang Dev Sonarqube SAML",
                  "surrogateAuthRequired": false,
                  "enabled": true,
                  "alwaysDisplayInConsole": false,
                  "clientAuthenticatorType": "client-secret",
                  "secret": "**********",
                  "redirectUris": [
                    "https://sonarqube.dogfood.bigbang.dev/oauth2/callback/saml*",
                    "https://sonarqube.bigbang.dev/oauth2/callback/saml*"
                  ],
                  "webOrigins": [],
                  "notBefore": 0,
                  "bearerOnly": false,
                  "consentRequired": true,
                  "standardFlowEnabled": true,
                  "implicitFlowEnabled": false,
                  "directAccessGrantsEnabled": false,
                  "serviceAccountsEnabled": false,
                  "publicClient": false,
                  "frontchannelLogout": true,
                  "protocol": "saml",
                  "attributes": {
                    "saml.force.post.binding": "true",
                    "saml.multivalued.roles": "false",
                    "oauth2.device.authorization.grant.enabled": "false",
                    "backchannel.logout.revoke.offline.tokens": "false",
                    "saml.server.signature.keyinfo.ext": "false",
                    "use.refresh.tokens": "true",
                    "saml.signing.certificate": "MIIDETCCAfkCBgF3KuB/ozANBgkqhkiG9w0BAQsFADBMMUowSAYDVQQDDEFwbGF0Zm9ybTFfYTg2MDRjYzktZjVlOS00NjU2LTgwMmQtZDA1NjI0MzcwMjQ1X2JiOC1zYW1sLXNvbmFycXViZTAeFw0yMTAxMjIxNjEzMTFaFw0zMTAxMjIxNjE0NTFaMEwxSjBIBgNVBAMMQXBsYXRmb3JtMV9hODYwNGNjOS1mNWU5LTQ2NTYtODAyZC1kMDU2MjQzNzAyNDVfYmI4LXNhbWwtc29uYXJxdWJlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAgqxNsJiFI3PVXiv7frUy0W3KYLVF05MhTPTiH0rNl0v5AbkmGMciIBscWEwZsp8h6W2zjOrfn21JqRkYjkbEFHnxcG/NpaPRenX/Z8+yVU4hdykssT90aAcER7c2E9TGXMvGloeQYNd9evev0/GpojLK+AoVcrZjca2Zvoe/Xkh3pTwt1KedE9502t55WxwImo3ZzZpFc4lmgsSNCZHShiLlhksoUy1mVk4rFVGTWLn9uDEv7N0h8eEkSm9kDZID4e4fryxpDi+poye49hExr29oCh+/ZGvq1CXWW99riq5UaRSV4mnO3ltRp19cd0DGN6FKljSCZVN0xH/QR0ZbgwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQB09x+9493D7rZq4/mMyjlOvPZeVde72I+56IJdXUbz9xAkwVfhQ124SX7Jx0whCnzhW8qowLlczh30zCh17ZbVQBcUqp4T1wm8sad8iQF90fjb/H18Qlt6szSqOD2iwaRCf+Oy2cLmIDhKFHAX8kJozX3wjU2hrRkTia/S2tm8P+o/mlc6PQeUfKHhT/WvY/ton6tGn9+e2rLpelDQmRUFFckWB32uPRpuz3uQ956/xufcAl8CUsgGgqMBvBauo97EsSi+Txk3SISnkMHFJWbpDIKBHaRobVB9f013R+8YbwPfm+pmygDeBEuV01o8LRm7UFTyjLkH5v+NBzkGF0bH",
                    "oidc.ciba.grant.enabled": "false",
                    "backchannel.logout.session.required": "false",
                    "saml.signature.algorithm": "RSA_SHA256",
                    "client_credentials.use_refresh_token": "false",
                    "consent.screen.text": "This client is used for development support for Big Bang / Platform One.  Be sure that you are only using this client for development.",
                    "saml.client.signature": "false",
                    "saml.signing.private.key": "MIIEogIBAAKCAQEAgqxNsJiFI3PVXiv7frUy0W3KYLVF05MhTPTiH0rNl0v5AbkmGMciIBscWEwZsp8h6W2zjOrfn21JqRkYjkbEFHnxcG/NpaPRenX/Z8+yVU4hdykssT90aAcER7c2E9TGXMvGloeQYNd9evev0/GpojLK+AoVcrZjca2Zvoe/Xkh3pTwt1KedE9502t55WxwImo3ZzZpFc4lmgsSNCZHShiLlhksoUy1mVk4rFVGTWLn9uDEv7N0h8eEkSm9kDZID4e4fryxpDi+poye49hExr29oCh+/ZGvq1CXWW99riq5UaRSV4mnO3ltRp19cd0DGN6FKljSCZVN0xH/QR0ZbgwIDAQABAoIBAGubGB7kej7HlF0IOwIMlNyBXLZmkCm6byHARrUeFE8S8OrKXOTqlt95c84CXOcKxBJFlCXnBF90z8PANshy3eU+xeOhLefJDyeZI8mI74Hv5P8LmRIc/u7rWEr2REHwZajk5ZPv7qTQzzQD43bU+qvmx92Z8C+Woi1ql8CeaKhqN1+5D7OqiKiPor2ekHvx7wkMm+Nb/pnHEaCIoKW2Mr6x3CkrOsnHxbdAEbhp+uglEtWWzTyspk1P+Z3knVY6oUL9VUK3qUmNWO/M+tc7a3rRUlgSzs+qT+ketveyLLUYPsEmrLPJ3jExCjdUL9UNdUqQOKnMJlujYaOcHooaToECgYEAuCDGAfNbxqi8hCYzvIm8ATN6wQnPfUlmMi7PKoG3io0z97UuboT47zbZOIJWYDMiLlezw9F0m9iE/FiuT2U7HagQD1JtrvhZKUc0q/sXXBEd9DseLGc5wSc4JFdE7XLDiyi4dqX5VDu9DmRC+XMe3xcqz0KBxeYjyBEFJRA0cT8CgYEAta35oJ/59ls7FZrHqcs3S885x9vj0Yxlosw01DtkX42X5lOepHRoJ0i3nknWTFWiw1WquCOiV9SkwaVCNC3hTLKzrKI0iahJjJeThaLn6PFJ4Evoa29gnRkp9QElDyx2MLroUEqtQ1RyuEFfchNmilfD9QSXQswZcyNcmn0BQL0CgYBWcvzEma/zW/H20cDkun5MyhDOZX7Hwhh7Y0LdID4+jQFjQevk9AW0urnOMFPBowBfZcn/HG51ZXk6yaA9orfYurmfmAHrbqreGJKAVMmo7lhz/PWzv1t8dp+DYH36RjHNOncxLcgcZlfjU+umFwjdkZEF8qHfeqg+HM+fkTYuHQKBgCzkemRoY1munWDvSBr6rgU7hWmPOjITYSHjF8LBkkHSORCe5Pp6ESpz23tvf1aJapid2Ht7wqe1UajP7xX5qExNc/xacGT7goENC1TgNjHnPXwBBcNWWCc5ipaR29huAh50cOc2LK4QdfB1puIHTTUuDqvCoKXOzRMYT8+Ux/R5AoGAbRjvfqExhACTt277ftHo/fB9EuKerafEvBndqjdFnJqENCMqt43i3cJ9b4cYXIkqlSCsXD5oOFadAYCJgMRIufaANidkl9KKrPn9HA2kIetGiYShrOzzu1R0iVUPFJZdpqm9yznIuFpfsVKl56EPwe/IsNwqQSN2l4vtUHLakew=",
                    "saml.assertion.signature": "false",
                    "id.token.as.detached.signature": "false",
                    "saml.encrypt": "false",
                    "saml.server.signature": "true",
                    "exclude.session.state.from.auth.response": "false",
                    "saml.artifact.binding.identifier": "MzWtPrrIAP7fVdD6+rOto/l0FVA=",
                    "saml.artifact.binding": "false",
                    "saml_force_name_id_format": "false",
                    "tls.client.certificate.bound.access.tokens": "false",
                    "saml.authnstatement": "true",
                    "display.on.consent.screen": "true",
                    "saml_name_id_format": "username",
                    "saml.onetimeuse.condition": "false",
                    "saml_signature_canonicalization_method": "http://www.w3.org/2001/10/xml-exc-c14n#"
                  },
                  "authenticationFlowBindingOverrides": {},
                  "fullScopeAllowed": true,
                  "nodeReRegistrationTimeout": -1,
                  "protocolMappers": [
                    {
                      "id": "06888032-3895-414b-879a-257e3e7bb6d6",
                      "name": "Name",
                      "protocol": "saml",
                      "protocolMapper": "saml-user-property-mapper",
                      "consentRequired": false,
                      "config": {
                        "attribute.nameformat": "Basic",
                        "user.attribute": "username",
                        "attribute.name": "name"
                      }
                    },
                    {
                      "id": "0a18f6db-91b7-4c39-8d1b-c0811aaedf0b",
                      "name": "Group",
                      "protocol": "saml",
                      "protocolMapper": "saml-group-membership-mapper",
                      "consentRequired": false,
                      "config": {
                        "single": "true",
                        "attribute.nameformat": "Basic",
                        "full.path": "false",
                        "attribute.name": "groups"
                      }
                    },
                    {
                      "id": "fadcca72-c57e-43f4-9dd8-4fdc94f38485",
                      "name": "Login",
                      "protocol": "saml",
                      "protocolMapper": "saml-user-property-mapper",
                      "consentRequired": false,
                      "config": {
                        "attribute.nameformat": "Basic",
                        "user.attribute": "Username",
                        "attribute.name": "login"
                      }
                    },
                    {
                      "id": "83572940-7a10-40d4-af5b-697182b53435",
                      "name": "Email",
                      "protocol": "saml",
                      "protocolMapper": "saml-user-property-mapper",
                      "consentRequired": false,
                      "config": {
                        "attribute.nameformat": "Basic",
                        "user.attribute": "email",
                        "attribute.name": "email"
                      }
                    }
                  ],
                  "defaultClientScopes": [],
                  "optionalClientScopes": []
                },
                {
                  "id": "88e8bc0c-a50a-4735-ab91-0b99080f9906",
                  "clientId": "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_twistlock-oidc",
                  "name": "twistlock",
                  "surrogateAuthRequired": false,
                  "enabled": true,
                  "alwaysDisplayInConsole": false,
                  "clientAuthenticatorType": "client-secret",
                  "redirectUris": [
                    "https://twistlock.bigbang.dev/api/v1/authenticate/callback/oidc"
                  ],
                  "webOrigins": [],
                  "notBefore": 0,
                  "bearerOnly": false,
                  "consentRequired": false,
                  "standardFlowEnabled": true,
                  "implicitFlowEnabled": false,
                  "directAccessGrantsEnabled": false,
                  "serviceAccountsEnabled": false,
                  "publicClient": true,
                  "frontchannelLogout": false,
                  "protocol": "openid-connect",
                  "attributes": {
                    "saml.assertion.signature": "false",
                    "id.token.as.detached.signature": "false",
                    "saml.multivalued.roles": "false",
                    "saml.force.post.binding": "false",
                    "saml.encrypt": "false",
                    "oauth2.device.authorization.grant.enabled": "false",
                    "backchannel.logout.revoke.offline.tokens": "false",
                    "saml.server.signature": "false",
                    "saml.server.signature.keyinfo.ext": "false",
                    "use.refresh.tokens": "true",
                    "exclude.session.state.from.auth.response": "false",
                    "oidc.ciba.grant.enabled": "false",
                    "saml.artifact.binding": "false",
                    "backchannel.logout.session.required": "true",
                    "client_credentials.use_refresh_token": "false",
                    "saml_force_name_id_format": "false",
                    "saml.client.signature": "false",
                    "tls.client.certificate.bound.access.tokens": "false",
                    "saml.authnstatement": "false",
                    "display.on.consent.screen": "false",
                    "saml.onetimeuse.condition": "false"
                  },
                  "authenticationFlowBindingOverrides": {},
                  "fullScopeAllowed": true,
                  "nodeReRegistrationTimeout": -1,
                  "defaultClientScopes": [
                    "profile"
                  ],
                  "optionalClientScopes": [
                    "address",
                    "phone",
                    "offline_access",
                    "microprofile-jwt"
                  ]
                },
                {
                  "id": "01a6f0c9-1965-45d4-8082-58dd29f406f3",
                  "clientId": "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_twistlock-saml",
                  "name": "BigBang Dev Twistlock",
                  "baseUrl": "",
                  "surrogateAuthRequired": false,
                  "enabled": true,
                  "alwaysDisplayInConsole": false,
                  "clientAuthenticatorType": "client-secret",
                  "redirectUris": [
                    "https://twistlock.bigbang.dev*",
                    "https://twistlock.dogfood.bigbang.dev*"
                  ],
                  "webOrigins": [],
                  "notBefore": 0,
                  "bearerOnly": false,
                  "consentRequired": true,
                  "standardFlowEnabled": true,
                  "implicitFlowEnabled": false,
                  "directAccessGrantsEnabled": false,
                  "serviceAccountsEnabled": false,
                  "publicClient": true,
                  "frontchannelLogout": true,
                  "protocol": "saml",
                  "attributes": {
                    "saml.multivalued.roles": "false",
                    "saml.force.post.binding": "true",
                    "oauth2.device.authorization.grant.enabled": "false",
                    "backchannel.logout.revoke.offline.tokens": "false",
                    "saml.server.signature.keyinfo.ext": "false",
                    "use.refresh.tokens": "true",
                    "oidc.ciba.grant.enabled": "false",
                    "backchannel.logout.session.required": "false",
                    "saml.signature.algorithm": "RSA_SHA256",
                    "client_credentials.use_refresh_token": "false",
                    "consent.screen.text": "This client is used for development support for Big Bang / Platform One.  Be sure that you are only using this client for development.",
                    "saml.client.signature": "false",
                    "saml.assertion.signature": "true",
                    "id.token.as.detached.signature": "false",
                    "saml.encrypt": "false",
                    "saml.server.signature": "true",
                    "exclude.session.state.from.auth.response": "false",
                    "saml.artifact.binding.identifier": "ATq0Fw8iNYtSLOjmZXQWpJeI03Y=",
                    "saml.artifact.binding": "false",
                    "saml_force_name_id_format": "false",
                    "tls.client.certificate.bound.access.tokens": "false",
                    "saml.authnstatement": "true",
                    "display.on.consent.screen": "true",
                    "saml_name_id_format": "username",
                    "saml.onetimeuse.condition": "false",
                    "saml_signature_canonicalization_method": "http://www.w3.org/2001/10/xml-exc-c14n#"
                  },
                  "authenticationFlowBindingOverrides": {},
                  "fullScopeAllowed": true,
                  "nodeReRegistrationTimeout": -1,
                  "defaultClientScopes": [
                    "role_list",
                    "twistlock"
                  ],
                  "optionalClientScopes": []
                },
                {
                  "id": "72f1277e-082c-48e4-aedb-52f5de9557db",
                  "clientId": "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_vault",
                  "name": "dev vault",
                  "surrogateAuthRequired": false,
                  "enabled": true,
                  "alwaysDisplayInConsole": false,
                  "clientAuthenticatorType": "client-secret",
                  "redirectUris": [
                    "https://vault.bigbang.dev/ui/vault/auth/oidc/oidc/callback",
                    "https://vault.bigbang.dev/oidc/callback"
                  ],
                  "webOrigins": [],
                  "notBefore": 0,
                  "bearerOnly": false,
                  "consentRequired": false,
                  "standardFlowEnabled": true,
                  "implicitFlowEnabled": false,
                  "directAccessGrantsEnabled": true,
                  "serviceAccountsEnabled": false,
                  "publicClient": true,
                  "frontchannelLogout": false,
                  "protocol": "openid-connect",
                  "attributes": {
                    "id.token.as.detached.signature": "false",
                    "saml.assertion.signature": "false",
                    "saml.force.post.binding": "false",
                    "saml.multivalued.roles": "false",
                    "saml.encrypt": "false",
                    "oauth2.device.authorization.grant.enabled": "false",
                    "backchannel.logout.revoke.offline.tokens": "false",
                    "saml.server.signature": "false",
                    "saml.server.signature.keyinfo.ext": "false",
                    "use.refresh.tokens": "true",
                    "exclude.session.state.from.auth.response": "false",
                    "oidc.ciba.grant.enabled": "false",
                    "saml.artifact.binding": "false",
                    "backchannel.logout.session.required": "true",
                    "client_credentials.use_refresh_token": "false",
                    "saml_force_name_id_format": "false",
                    "require.pushed.authorization.requests": "false",
                    "saml.client.signature": "false",
                    "tls.client.certificate.bound.access.tokens": "false",
                    "saml.authnstatement": "false",
                    "display.on.consent.screen": "false",
                    "saml.onetimeuse.condition": "false"
                  },
                  "authenticationFlowBindingOverrides": {},
                  "fullScopeAllowed": true,
                  "nodeReRegistrationTimeout": -1,
                  "protocolMappers": [
                    {
                      "id": "c0481802-7c25-4599-8fbc-1584f1167339",
                      "name": "groups",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-group-membership-mapper",
                      "consentRequired": false,
                      "config": {
                        "full.path": "false",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "groups",
                        "userinfo.token.claim": "true"
                      }
                    }
                  ],
                  "defaultClientScopes": [
                    "web-origins",
                    "roles",
                    "profile",
                    "email"
                  ],
                  "optionalClientScopes": [
                    "address",
                    "phone",
                    "offline_access",
                    "microprofile-jwt"
                  ]
                },
                {
                  "id": "f975a475-89c7-43bc-bddb-c9d974ff5ac3",
                  "clientId": "https://nexus.bigbang.dev/service/rest/v1/security/saml/metadata",
                  "surrogateAuthRequired": false,
                  "enabled": true,
                  "alwaysDisplayInConsole": false,
                  "clientAuthenticatorType": "client-secret",
                  "redirectUris": [
                    "https://nexus.bigbang.dev/saml"
                  ],
                  "webOrigins": [
                    "https://nexus.bigbang.dev"
                  ],
                  "notBefore": 0,
                  "bearerOnly": false,
                  "consentRequired": false,
                  "standardFlowEnabled": true,
                  "implicitFlowEnabled": false,
                  "directAccessGrantsEnabled": false,
                  "serviceAccountsEnabled": false,
                  "publicClient": false,
                  "frontchannelLogout": true,
                  "protocol": "saml",
                  "attributes": {
                    "saml.assertion.signature": "true",
                    "saml_single_logout_service_url_post": "https://nexus.bigbang.dev/saml",
                    "saml.force.post.binding": "true",
                    "saml.encrypt": "true",
                    "saml_assertion_consumer_url_post": "https://nexus.bigbang.dev/saml",
                    "saml.server.signature": "true",
                    "saml.server.signature.keyinfo.ext": "false",
                    "saml.signing.certificate": "MIICrjCCAZagAwIBAgIGAXxWyxltMA0GCSqGSIb3DQEBCwUAMBgxFjAUBgNVBAMMDVNBTUwgS2V5U3RvcmUwHhcNMjExMDA2MTgwODQzWhcNMzExMDA0MTgwODQzWjAYMRYwFAYDVQQDDA1TQU1MIEtleVN0b3JlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxUynY8ACJfuCmMQqxqRekKeD7OTyjttfyxE2Xnny67/67evr/GZIUz0XsYl6XgTpTj2Nk6kaVWJR7W/dy0zqK+4liCRTzuDoOkaOZY+IqH8+XVqXei4eQo9g5woXOzsXihpaMQ38yXVKmkq13UCas8PKS1AnkUT1tAYDUoLL8o2kmGedLscpyb3+rf4F5nWJLTGgWIG8mQ7X3CpvKD9+cCLGkJJSOdK8XHPYVO8MDTVqxhLZEejYIHAwN1oFPGkURzskiD1CCDymQq/f0tbQlnu62FOa3iu6TqpQWB9pGoFj84p2uvMNIvDN489fBTT3blFnSu3tFDwAividADYuswIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBDMUOqL4pQJhYFqstQNaz8LlDALTTD1uw/k0MFGxTAa5Tri87WvTHa8uJNDw1PFUGZ80137TCK7I7+zDZIQzADb+WoZVPhIh+S9L9bbaQZ2LpRnsoJisP+fWNoDrR8okPYJ8pFuzA3V1dU5Oyo0kz1tTWtlnh2NIs6f9dClo5HjeUw6wigjcp5dLcz8RanWwKXYHAIAYlarUjjVdHLDvEmZzvWTWOK6JtLOx+3XRYcuKx5ICdTnDp9ptMB0MOZf8/rLUKpSz+rMKRlRoFR7vEpTtMbKtl8izZTKDYpWOf1MIE1Tv/Pq+dehjBoccwLthSEA+ba7/lJ0O0+U0euW+yT",
                    "saml.artifact.binding.identifier": "zi3d4HrYBBkEVIhg+2TTyVulk7A=",
                    "saml.signature.algorithm": "RSA_SHA256",
                    "saml_force_name_id_format": "false",
                    "saml.client.signature": "true",
                    "saml.encryption.certificate": "MIICrjCCAZagAwIBAgIGAXxWyxltMA0GCSqGSIb3DQEBCwUAMBgxFjAUBgNVBAMMDVNBTUwgS2V5U3RvcmUwHhcNMjExMDA2MTgwODQzWhcNMzExMDA0MTgwODQzWjAYMRYwFAYDVQQDDA1TQU1MIEtleVN0b3JlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxUynY8ACJfuCmMQqxqRekKeD7OTyjttfyxE2Xnny67/67evr/GZIUz0XsYl6XgTpTj2Nk6kaVWJR7W/dy0zqK+4liCRTzuDoOkaOZY+IqH8+XVqXei4eQo9g5woXOzsXihpaMQ38yXVKmkq13UCas8PKS1AnkUT1tAYDUoLL8o2kmGedLscpyb3+rf4F5nWJLTGgWIG8mQ7X3CpvKD9+cCLGkJJSOdK8XHPYVO8MDTVqxhLZEejYIHAwN1oFPGkURzskiD1CCDymQq/f0tbQlnu62FOa3iu6TqpQWB9pGoFj84p2uvMNIvDN489fBTT3blFnSu3tFDwAividADYuswIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBDMUOqL4pQJhYFqstQNaz8LlDALTTD1uw/k0MFGxTAa5Tri87WvTHa8uJNDw1PFUGZ80137TCK7I7+zDZIQzADb+WoZVPhIh+S9L9bbaQZ2LpRnsoJisP+fWNoDrR8okPYJ8pFuzA3V1dU5Oyo0kz1tTWtlnh2NIs6f9dClo5HjeUw6wigjcp5dLcz8RanWwKXYHAIAYlarUjjVdHLDvEmZzvWTWOK6JtLOx+3XRYcuKx5ICdTnDp9ptMB0MOZf8/rLUKpSz+rMKRlRoFR7vEpTtMbKtl8izZTKDYpWOf1MIE1Tv/Pq+dehjBoccwLthSEA+ba7/lJ0O0+U0euW+yT",
                    "saml.authnstatement": "true",
                    "saml_name_id_format": "username",
                    "saml_signature_canonicalization_method": "http://www.w3.org/2001/10/xml-exc-c14n#"
                  },
                  "authenticationFlowBindingOverrides": {},
                  "fullScopeAllowed": true,
                  "nodeReRegistrationTimeout": -1,
                  "protocolMappers": [
                    {
                      "id": "fcbdab3a-887f-4386-aaac-8df9c6998eef",
                      "name": "Groups",
                      "protocol": "saml",
                      "protocolMapper": "saml-group-membership-mapper",
                      "consentRequired": false,
                      "config": {
                        "single": "true",
                        "attribute.nameformat": "Basic",
                        "full.path": "false",
                        "friendly.name": "groups",
                        "attribute.name": "groups"
                      }
                    },
                    {
                      "id": "4bf047d6-64fd-4304-8fd3-e0308a3f9d82",
                      "name": "username",
                      "protocol": "saml",
                      "protocolMapper": "saml-user-property-mapper",
                      "consentRequired": false,
                      "config": {
                        "attribute.nameformat": "Basic",
                        "user.attribute": "username",
                        "friendly.name": "username",
                        "attribute.name": "username"
                      }
                    },
                    {
                      "id": "a6a96c9f-b273-4fdd-ab66-94e4f872cb70",
                      "name": "Last Name",
                      "protocol": "saml",
                      "protocolMapper": "saml-user-property-mapper",
                      "consentRequired": false,
                      "config": {
                        "attribute.nameformat": "Basic",
                        "user.attribute": "lastName",
                        "friendly.name": "lastName",
                        "attribute.name": "lastName"
                      }
                    },
                    {
                      "id": "60d39726-b959-4ea6-a38b-7a6821fa4518",
                      "name": "First Name",
                      "protocol": "saml",
                      "protocolMapper": "saml-user-property-mapper",
                      "consentRequired": false,
                      "config": {
                        "attribute.nameformat": "Basic",
                        "user.attribute": "firstName",
                        "friendly.name": "firstName",
                        "attribute.name": "firstName"
                      }
                    }
                  ],
                  "defaultClientScopes": [
                    "role_list"
                  ],
                  "optionalClientScopes": []
                },
                {
                  "id": "55aa6b66-9150-45ec-b6d8-4f941bcdcc26",
                  "clientId": "realm-management",
                  "name": "${client_realm-management}",
                  "surrogateAuthRequired": false,
                  "enabled": true,
                  "alwaysDisplayInConsole": false,
                  "clientAuthenticatorType": "client-secret",
                  "secret": "**********",
                  "redirectUris": [],
                  "webOrigins": [],
                  "notBefore": 0,
                  "bearerOnly": true,
                  "consentRequired": false,
                  "standardFlowEnabled": true,
                  "implicitFlowEnabled": false,
                  "directAccessGrantsEnabled": false,
                  "serviceAccountsEnabled": false,
                  "publicClient": false,
                  "frontchannelLogout": false,
                  "protocol": "openid-connect",
                  "attributes": {},
                  "authenticationFlowBindingOverrides": {},
                  "fullScopeAllowed": false,
                  "nodeReRegistrationTimeout": 0,
                  "defaultClientScopes": [],
                  "optionalClientScopes": []
                },
                {
                  "id": "6fb79009-25ae-40a4-9ad0-bee278c88ffe",
                  "clientId": "security-admin-console",
                  "name": "${client_security-admin-console}",
                  "rootUrl": "${authAdminUrl}",
                  "baseUrl": "/admin/baby-yoda/console/",
                  "surrogateAuthRequired": false,
                  "enabled": true,
                  "alwaysDisplayInConsole": false,
                  "clientAuthenticatorType": "client-secret",
                  "secret": "**********",
                  "redirectUris": [
                    "/admin/baby-yoda/console/*"
                  ],
                  "webOrigins": [
                    "+"
                  ],
                  "notBefore": 0,
                  "bearerOnly": false,
                  "consentRequired": false,
                  "standardFlowEnabled": true,
                  "implicitFlowEnabled": false,
                  "directAccessGrantsEnabled": false,
                  "serviceAccountsEnabled": false,
                  "publicClient": true,
                  "frontchannelLogout": false,
                  "protocol": "openid-connect",
                  "attributes": {
                    "pkce.code.challenge.method": "S256"
                  },
                  "authenticationFlowBindingOverrides": {},
                  "fullScopeAllowed": false,
                  "nodeReRegistrationTimeout": 0,
                  "protocolMappers": [
                    {
                      "id": "877c3b95-14b0-4b2b-8cb3-922570c208e9",
                      "name": "locale",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-usermodel-attribute-mapper",
                      "consentRequired": false,
                      "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "locale",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "locale",
                        "jsonType.label": "String"
                      }
                    }
                  ],
                  "defaultClientScopes": [],
                  "optionalClientScopes": []
                }
              ],
              "clientScopes": [
                {
                  "id": "486bcb60-f616-4c56-a9b2-cc51455be865",
                  "name": "microprofile-jwt",
                  "description": "Microprofile - JWT built-in scope",
                  "protocol": "openid-connect",
                  "attributes": {
                    "include.in.token.scope": "true",
                    "display.on.consent.screen": "false"
                  },
                  "protocolMappers": [
                    {
                      "id": "97286b1b-f4f6-4eee-9209-583c0bd58661",
                      "name": "upn",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-usermodel-property-mapper",
                      "consentRequired": false,
                      "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "username",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "upn",
                        "jsonType.label": "String"
                      }
                    },
                    {
                      "id": "ea6d61be-ce3d-42c5-909f-9eec38394dfd",
                      "name": "groups",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-usermodel-realm-role-mapper",
                      "consentRequired": false,
                      "config": {
                        "multivalued": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "foo",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "groups",
                        "jsonType.label": "String"
                      }
                    }
                  ]
                },
                {
                  "id": "24447c4b-00a2-41f0-ae7d-a008d60fd33b",
                  "name": "Grafana",
                  "protocol": "openid-connect",
                  "attributes": {
                    "include.in.token.scope": "true",
                    "display.on.consent.screen": "true"
                  },
                  "protocolMappers": [
                    {
                      "id": "8bb5981c-7d17-449d-92eb-20c617658e99",
                      "name": "username",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-usermodel-property-mapper",
                      "consentRequired": false,
                      "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "username",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "preferred_username",
                        "jsonType.label": "String"
                      }
                    },
                    {
                      "id": "84d4a8f9-8add-4317-b760-6437696f45c0",
                      "name": "realm roles",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-usermodel-realm-role-mapper",
                      "consentRequired": false,
                      "config": {
                        "usermodel.realmRoleMapping.rolePrefix": "realm roles",
                        "multivalued": "true",
                        "userinfo.token.claim": "false",
                        "id.token.claim": "false",
                        "access.token.claim": "true",
                        "claim.name": "realm_access.roles",
                        "jsonType.label": "String"
                      }
                    },
                    {
                      "id": "ce8b1959-fce2-416e-8dd4-260dbec1e867",
                      "name": "client roles",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-usermodel-client-role-mapper",
                      "consentRequired": false,
                      "config": {
                        "multivalued": "true",
                        "userinfo.token.claim": "false",
                        "id.token.claim": "false",
                        "access.token.claim": "true",
                        "claim.name": "resource_access.${client_id}.roles",
                        "jsonType.label": "String"
                      }
                    },
                    {
                      "id": "8d37ffdc-beda-4c35-a5fb-eb459e0d0aaa",
                      "name": "email",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-usermodel-property-mapper",
                      "consentRequired": false,
                      "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "email",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "email",
                        "jsonType.label": "String"
                      }
                    },
                    {
                      "id": "01846b2d-1790-4e35-b356-7f74ea649253",
                      "name": "profile",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-usermodel-attribute-mapper",
                      "consentRequired": false,
                      "config": {
                        "userinfo.token.claim": "true",
                        "multivalued": "false",
                        "user.attribute": "profile",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "profile",
                        "jsonType.label": "String"
                      }
                    },
                    {
                      "id": "314e75e6-c080-452c-9979-eba7ffc58e0c",
                      "name": "groups",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-group-membership-mapper",
                      "consentRequired": false,
                      "config": {
                        "full.path": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "groups",
                        "userinfo.token.claim": "true"
                      }
                    }
                  ]
                },
                {
                  "id": "9326a78d-1e0d-4442-89d6-28e6aba20d00",
                  "name": "Gitlab",
                  "protocol": "openid-connect",
                  "attributes": {
                    "include.in.token.scope": "true",
                    "display.on.consent.screen": "true"
                  },
                  "protocolMappers": [
                    {
                      "id": "179eb941-92e3-4a1d-aef4-3cc42499faf0",
                      "name": "profile",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-usermodel-attribute-mapper",
                      "consentRequired": false,
                      "config": {
                        "user.attribute": "proflie",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "jsonType.label": "String",
                        "userinfo.token.claim": "true"
                      }
                    },
                    {
                      "id": "f1513c5e-ac20-4a20-8ec2-24a01b9a8650",
                      "name": "email",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-usermodel-property-mapper",
                      "consentRequired": false,
                      "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "email",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "email",
                        "jsonType.label": "String"
                      }
                    },
                    {
                      "id": "54cb51e4-7d97-409a-b7f4-bf2e85493a56",
                      "name": "username",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-usermodel-property-mapper",
                      "consentRequired": false,
                      "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "username",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "preferred_username",
                        "jsonType.label": "String"
                      }
                    }
                  ]
                },
                {
                  "id": "55915d87-03a7-4823-8fc1-793986513124",
                  "name": "acr",
                  "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
                  "protocol": "openid-connect",
                  "attributes": {
                    "include.in.token.scope": "false",
                    "display.on.consent.screen": "false"
                  },
                  "protocolMappers": [
                    {
                      "id": "3192d30b-72d6-4e76-a32c-5b4555f388b8",
                      "name": "acr loa level",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-acr-mapper",
                      "consentRequired": false,
                      "config": {
                        "id.token.claim": "true",
                        "access.token.claim": "true"
                      }
                    }
                  ]
                },
                {
                  "id": "ece5f888-591c-44b4-a0a4-22050092a0ff",
                  "name": "web-origins",
                  "description": "OpenID Connect scope for add allowed web origins to the access token",
                  "protocol": "openid-connect",
                  "attributes": {
                    "include.in.token.scope": "false",
                    "display.on.consent.screen": "false",
                    "consent.screen.text": ""
                  },
                  "protocolMappers": [
                    {
                      "id": "9462b17e-b393-4c21-b726-4ee1b5162638",
                      "name": "allowed web origins",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-allowed-origins-mapper",
                      "consentRequired": false,
                      "config": {}
                    }
                  ]
                },
                {
                  "id": "1d6dc724-222d-4465-b93a-e89c515a4dd6",
                  "name": "phone",
                  "description": "OpenID Connect built-in scope: phone",
                  "protocol": "openid-connect",
                  "attributes": {
                    "include.in.token.scope": "true",
                    "display.on.consent.screen": "true",
                    "consent.screen.text": "${phoneScopeConsentText}"
                  },
                  "protocolMappers": [
                    {
                      "id": "c1145c8e-0563-48ba-ae7f-af918f0b8d2e",
                      "name": "phone number",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-usermodel-attribute-mapper",
                      "consentRequired": false,
                      "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "phoneNumber",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "phone_number",
                        "jsonType.label": "String"
                      }
                    },
                    {
                      "id": "c2d969e9-e554-4627-99c8-bbecec694e0a",
                      "name": "phone number verified",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-usermodel-attribute-mapper",
                      "consentRequired": false,
                      "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "phoneNumberVerified",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "phone_number_verified",
                        "jsonType.label": "boolean"
                      }
                    }
                  ]
                },
                {
                  "id": "064e6036-85e1-45ae-87ac-5614510456a7",
                  "name": "email",
                  "description": "OpenID Connect built-in scope: email",
                  "protocol": "openid-connect",
                  "attributes": {
                    "include.in.token.scope": "true",
                    "display.on.consent.screen": "true",
                    "consent.screen.text": "${emailScopeConsentText}"
                  },
                  "protocolMappers": [
                    {
                      "id": "138f1206-c9d2-41ff-80bf-1d6ad279fc14",
                      "name": "email",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-usermodel-property-mapper",
                      "consentRequired": false,
                      "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "email",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "email",
                        "jsonType.label": "String"
                      }
                    },
                    {
                      "id": "d77eca3b-36e6-44b0-9274-34442dbcdfcf",
                      "name": "email verified",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-usermodel-property-mapper",
                      "consentRequired": false,
                      "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "emailVerified",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "email_verified",
                        "jsonType.label": "boolean"
                      }
                    }
                  ]
                },
                {
                  "id": "fe2dbca3-685c-4f46-b2a3-3c3f6efb9049",
                  "name": "role_list",
                  "description": "SAML role list",
                  "protocol": "saml",
                  "attributes": {
                    "consent.screen.text": "${samlRoleListScopeConsentText}",
                    "display.on.consent.screen": "true"
                  },
                  "protocolMappers": [
                    {
                      "id": "5b33612e-8bd9-49c1-bd37-c25851fb227d",
                      "name": "role list",
                      "protocol": "saml",
                      "protocolMapper": "saml-role-list-mapper",
                      "consentRequired": false,
                      "config": {
                        "single": "false",
                        "attribute.nameformat": "Basic",
                        "attribute.name": "Role"
                      }
                    }
                  ]
                },
                {
                  "id": "98fe901c-81b9-4229-9b9f-1177d341e9db",
                  "name": "offline_access",
                  "description": "OpenID Connect built-in scope: offline_access",
                  "protocol": "openid-connect",
                  "attributes": {
                    "consent.screen.text": "${offlineAccessScopeConsentText}",
                    "display.on.consent.screen": "true"
                  }
                },
                {
                  "id": "a78ae9be-9dca-4858-b573-d6aeacf77584",
                  "name": "twistlock",
                  "description": "twistlock",
                  "protocol": "saml",
                  "attributes": {
                    "include.in.token.scope": "true",
                    "display.on.consent.screen": "true"
                  }
                },
                {
                  "id": "73183397-1d5a-4387-b54d-de45d1d98658",
                  "name": "profile",
                  "description": "OpenID Connect built-in scope: profile",
                  "protocol": "openid-connect",
                  "attributes": {
                    "include.in.token.scope": "true",
                    "display.on.consent.screen": "true",
                    "consent.screen.text": "${profileScopeConsentText}"
                  },
                  "protocolMappers": [
                    {
                      "id": "49c7590e-e8fc-4a51-9f2a-1148800538e8",
                      "name": "gender",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-usermodel-attribute-mapper",
                      "consentRequired": false,
                      "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "gender",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "gender",
                        "jsonType.label": "String"
                      }
                    },
                    {
                      "id": "11d12135-2c22-4f45-a9d1-759c34cc4ceb",
                      "name": "updated at",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-usermodel-attribute-mapper",
                      "consentRequired": false,
                      "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "updatedAt",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "updated_at",
                        "jsonType.label": "String"
                      }
                    },
                    {
                      "id": "ac3c8e9b-6fc4-4853-9f10-08a620960b1b",
                      "name": "username",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-usermodel-property-mapper",
                      "consentRequired": false,
                      "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "username",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "preferred_username",
                        "jsonType.label": "String"
                      }
                    },
                    {
                      "id": "c9428437-e280-47d2-bffb-affc860b53bc",
                      "name": "picture",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-usermodel-attribute-mapper",
                      "consentRequired": false,
                      "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "picture",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "picture",
                        "jsonType.label": "String"
                      }
                    },
                    {
                      "id": "52ffd1d8-9ce2-4a20-ba10-68c5f2652836",
                      "name": "website",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-usermodel-attribute-mapper",
                      "consentRequired": false,
                      "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "website",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "website",
                        "jsonType.label": "String"
                      }
                    },
                    {
                      "id": "12324360-6724-4f17-a82a-0dd11536954d",
                      "name": "zoneinfo",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-usermodel-attribute-mapper",
                      "consentRequired": false,
                      "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "zoneinfo",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "zoneinfo",
                        "jsonType.label": "String"
                      }
                    },
                    {
                      "id": "ddcd682b-66c8-4f30-89f3-b833983af1b8",
                      "name": "birthdate",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-usermodel-attribute-mapper",
                      "consentRequired": false,
                      "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "birthdate",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "birthdate",
                        "jsonType.label": "String"
                      }
                    },
                    {
                      "id": "f9877242-403a-4649-86cb-971e1efd6ebe",
                      "name": "given name",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-usermodel-property-mapper",
                      "consentRequired": false,
                      "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "firstName",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "given_name",
                        "jsonType.label": "String"
                      }
                    },
                    {
                      "id": "e31e1d5b-9cc4-4d08-92eb-1cf763a9e24f",
                      "name": "family name",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-usermodel-property-mapper",
                      "consentRequired": false,
                      "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "lastName",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "family_name",
                        "jsonType.label": "String"
                      }
                    },
                    {
                      "id": "177f9c08-b354-426d-a06b-4043bdcd5c65",
                      "name": "locale",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-usermodel-attribute-mapper",
                      "consentRequired": false,
                      "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "locale",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "locale",
                        "jsonType.label": "String"
                      }
                    },
                    {
                      "id": "19d751de-4c6c-4524-804e-687eb860a21c",
                      "name": "full name",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-full-name-mapper",
                      "consentRequired": false,
                      "config": {
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "userinfo.token.claim": "true"
                      }
                    },
                    {
                      "id": "c778183f-a0ab-49fd-9131-3b7525100827",
                      "name": "profile",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-usermodel-attribute-mapper",
                      "consentRequired": false,
                      "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "profile",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "profile",
                        "jsonType.label": "String"
                      }
                    },
                    {
                      "id": "859a1100-468e-4753-b109-71b07c0cae24",
                      "name": "middle name",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-usermodel-attribute-mapper",
                      "consentRequired": false,
                      "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "middleName",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "middle_name",
                        "jsonType.label": "String"
                      }
                    },
                    {
                      "id": "8dcc1f5d-256f-4bcc-b6d2-db931a52fe74",
                      "name": "nickname",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-usermodel-attribute-mapper",
                      "consentRequired": false,
                      "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "nickname",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "nickname",
                        "jsonType.label": "String"
                      }
                    }
                  ]
                },
                {
                  "id": "55c60259-8981-4cd4-a593-a07b71c9a9f3",
                  "name": "roles",
                  "description": "OpenID Connect scope for add user roles to the access token",
                  "protocol": "openid-connect",
                  "attributes": {
                    "include.in.token.scope": "false",
                    "display.on.consent.screen": "true",
                    "consent.screen.text": "${rolesScopeConsentText}"
                  },
                  "protocolMappers": [
                    {
                      "id": "776ed187-694d-4324-80f0-f7a210604462",
                      "name": "realm roles",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-usermodel-realm-role-mapper",
                      "consentRequired": false,
                      "config": {
                        "user.attribute": "foo",
                        "access.token.claim": "true",
                        "claim.name": "realm_access.roles",
                        "jsonType.label": "String",
                        "multivalued": "true"
                      }
                    },
                    {
                      "id": "1dbd971a-ab9c-49d0-997f-8cc939f70145",
                      "name": "audience resolve",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-audience-resolve-mapper",
                      "consentRequired": false,
                      "config": {}
                    },
                    {
                      "id": "4333b5ca-2c48-4384-a52b-47ee263cc8e0",
                      "name": "client roles",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-usermodel-client-role-mapper",
                      "consentRequired": false,
                      "config": {
                        "user.attribute": "foo",
                        "access.token.claim": "true",
                        "claim.name": "resource_access.${client_id}.roles",
                        "jsonType.label": "String",
                        "multivalued": "true"
                      }
                    }
                  ]
                },
                {
                  "id": "13d19457-7520-4260-88e7-e411fef66a89",
                  "name": "ArgoCD",
                  "description": "ArgoCD",
                  "protocol": "openid-connect",
                  "attributes": {
                    "include.in.token.scope": "true",
                    "display.on.consent.screen": "true"
                  },
                  "protocolMappers": [
                    {
                      "id": "45551e56-67f5-41af-a27b-bb8893fbdc1e",
                      "name": "groups",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-group-membership-mapper",
                      "consentRequired": false,
                      "config": {
                        "full.path": "false",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "groups",
                        "userinfo.token.claim": "true"
                      }
                    },
                    {
                      "id": "27016c5d-5d3b-4584-9fa4-dd0cf7333eff",
                      "name": "email",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-usermodel-property-mapper",
                      "consentRequired": false,
                      "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "email",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "email",
                        "jsonType.label": "String"
                      }
                    },
                    {
                      "id": "bed5efd5-b34b-495c-b9a6-7abc5578969c",
                      "name": "nickname",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-usermodel-attribute-mapper",
                      "consentRequired": false,
                      "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "nickname",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "nickname",
                        "jsonType.label": "String"
                      }
                    },
                    {
                      "id": "b99c8886-059f-42ff-840f-47fe82d52d8c",
                      "name": "full name",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-full-name-mapper",
                      "consentRequired": false,
                      "config": {
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "userinfo.token.claim": "true"
                      }
                    },
                    {
                      "id": "ef9009c0-9865-4409-ba35-47396b1cb734",
                      "name": "profile",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-usermodel-attribute-mapper",
                      "consentRequired": false,
                      "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "profile",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "profile",
                        "jsonType.label": "String"
                      }
                    },
                    {
                      "id": "b67b20e2-c9b8-4ed9-85e9-255feb73975f",
                      "name": "username",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-usermodel-property-mapper",
                      "consentRequired": false,
                      "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "username",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "preferred_username",
                        "jsonType.label": "String"
                      }
                    }
                  ]
                },
                {
                  "id": "8449cb31-24be-4fcb-8263-8eca0c1e9f5b",
                  "name": "elastic",
                  "description": "elastic",
                  "protocol": "openid-connect",
                  "attributes": {
                    "include.in.token.scope": "true",
                    "display.on.consent.screen": "true"
                  },
                  "protocolMappers": [
                    {
                      "id": "1a54ed51-5663-4a68-b966-1ebe554d0fa5",
                      "name": "group",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-group-membership-mapper",
                      "consentRequired": false,
                      "config": {
                        "full.path": "false",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "groups",
                        "userinfo.token.claim": "true"
                      }
                    },
                    {
                      "id": "7423fef6-af04-4e5c-baac-a7dec8e4f1df",
                      "name": "email",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-usermodel-property-mapper",
                      "consentRequired": false,
                      "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "email",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "email",
                        "jsonType.label": "String"
                      }
                    },
                    {
                      "id": "f277b67c-ff9e-41ba-a30b-fb60d25612a9",
                      "name": "username",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-usermodel-property-mapper",
                      "consentRequired": false,
                      "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "username",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "preferred_username",
                        "jsonType.label": "String"
                      }
                    }
                  ]
                },
                {
                  "id": "4d3d36a8-e9b7-4ce4-8086-be68215c27d9",
                  "name": "address",
                  "description": "OpenID Connect built-in scope: address",
                  "protocol": "openid-connect",
                  "attributes": {
                    "include.in.token.scope": "true",
                    "display.on.consent.screen": "true",
                    "consent.screen.text": "${addressScopeConsentText}"
                  },
                  "protocolMappers": [
                    {
                      "id": "a5cdca3b-b1e7-4681-813c-67f542b0a1c3",
                      "name": "address",
                      "protocol": "openid-connect",
                      "protocolMapper": "oidc-address-mapper",
                      "consentRequired": false,
                      "config": {
                        "user.attribute.formatted": "formatted",
                        "user.attribute.country": "country",
                        "user.attribute.postal_code": "postal_code",
                        "userinfo.token.claim": "true",
                        "user.attribute.street": "street",
                        "id.token.claim": "true",
                        "user.attribute.region": "region",
                        "access.token.claim": "true",
                        "user.attribute.locality": "locality"
                      }
                    }
                  ]
                }
              ],
              "defaultDefaultClientScopes": [
                "email",
                "roles",
                "profile",
                "web-origins",
                "role_list",
                "acr"
              ],
              "defaultOptionalClientScopes": [
                "phone",
                "microprofile-jwt",
                "address",
                "offline_access"
              ],
              "browserSecurityHeaders": {
                "contentSecurityPolicyReportOnly": "",
                "xContentTypeOptions": "nosniff",
                "xRobotsTag": "none",
                "xFrameOptions": "SAMEORIGIN",
                "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
                "xXSSProtection": "1; mode=block",
                "strictTransportSecurity": "max-age=31536000; includeSubDomains"
              },
              "smtpServer": {
                "password": "**********",
                "starttls": "true",
                "auth": "true",
                "port": "",
                "host": "",
                "from": "",
                "fromDisplayName": "",
                "ssl": "",
                "user": ""
              },
              "loginTheme": "p1-sso",
              "accountTheme": "p1-sso",
              "adminTheme": "p1-sso",
              "emailTheme": "keycloak",
              "eventsEnabled": false,
              "eventsExpiration": 1800,
              "eventsListeners": [
                "jboss-logging"
              ],
              "enabledEventTypes": [
                "SEND_RESET_PASSWORD",
                "UPDATE_CONSENT_ERROR",
                "GRANT_CONSENT",
                "REMOVE_TOTP",
                "REVOKE_GRANT",
                "UPDATE_TOTP",
                "LOGIN_ERROR",
                "CLIENT_LOGIN",
                "RESET_PASSWORD_ERROR",
                "IMPERSONATE_ERROR",
                "CODE_TO_TOKEN_ERROR",
                "CUSTOM_REQUIRED_ACTION",
                "RESTART_AUTHENTICATION",
                "IMPERSONATE",
                "UPDATE_PROFILE_ERROR",
                "LOGIN",
                "UPDATE_PASSWORD_ERROR",
                "CLIENT_INITIATED_ACCOUNT_LINKING",
                "TOKEN_EXCHANGE",
                "LOGOUT",
                "REGISTER",
                "CLIENT_REGISTER",
                "IDENTITY_PROVIDER_LINK_ACCOUNT",
                "UPDATE_PASSWORD",
                "CLIENT_DELETE",
                "FEDERATED_IDENTITY_LINK_ERROR",
                "IDENTITY_PROVIDER_FIRST_LOGIN",
                "CLIENT_DELETE_ERROR",
                "VERIFY_EMAIL",
                "CLIENT_LOGIN_ERROR",
                "RESTART_AUTHENTICATION_ERROR",
                "EXECUTE_ACTIONS",
                "REMOVE_FEDERATED_IDENTITY_ERROR",
                "TOKEN_EXCHANGE_ERROR",
                "PERMISSION_TOKEN",
                "SEND_IDENTITY_PROVIDER_LINK_ERROR",
                "EXECUTE_ACTION_TOKEN_ERROR",
                "SEND_VERIFY_EMAIL",
                "EXECUTE_ACTIONS_ERROR",
                "REMOVE_FEDERATED_IDENTITY",
                "IDENTITY_PROVIDER_POST_LOGIN",
                "IDENTITY_PROVIDER_LINK_ACCOUNT_ERROR",
                "UPDATE_EMAIL",
                "REGISTER_ERROR",
                "REVOKE_GRANT_ERROR",
                "EXECUTE_ACTION_TOKEN",
                "LOGOUT_ERROR",
                "UPDATE_EMAIL_ERROR",
                "CLIENT_UPDATE_ERROR",
                "UPDATE_PROFILE",
                "CLIENT_REGISTER_ERROR",
                "FEDERATED_IDENTITY_LINK",
                "SEND_IDENTITY_PROVIDER_LINK",
                "SEND_VERIFY_EMAIL_ERROR",
                "RESET_PASSWORD",
                "CLIENT_INITIATED_ACCOUNT_LINKING_ERROR",
                "UPDATE_CONSENT",
                "REMOVE_TOTP_ERROR",
                "VERIFY_EMAIL_ERROR",
                "SEND_RESET_PASSWORD_ERROR",
                "CLIENT_UPDATE",
                "CUSTOM_REQUIRED_ACTION_ERROR",
                "IDENTITY_PROVIDER_POST_LOGIN_ERROR",
                "UPDATE_TOTP_ERROR",
                "CODE_TO_TOKEN",
                "GRANT_CONSENT_ERROR",
                "IDENTITY_PROVIDER_FIRST_LOGIN_ERROR"
              ],
              "adminEventsEnabled": true,
              "adminEventsDetailsEnabled": true,
              "identityProviders": [],
              "identityProviderMappers": [],
              "components": {
                "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
                  {
                    "id": "ccd57f68-3f54-4f9b-b2a7-47cbbedefe84",
                    "name": "Allowed Client Scopes",
                    "providerId": "allowed-client-templates",
                    "subType": "anonymous",
                    "subComponents": {},
                    "config": {
                      "allow-default-scopes": [
                        "true"
                      ]
                    }
                  },
                  {
                    "id": "1f12d3a2-a9ef-4720-bb36-a363ae9abfdf",
                    "name": "Allowed Protocol Mapper Types",
                    "providerId": "allowed-protocol-mappers",
                    "subType": "authenticated",
                    "subComponents": {},
                    "config": {
                      "allowed-protocol-mapper-types": [
                        "oidc-sha256-pairwise-sub-mapper",
                        "saml-user-attribute-mapper",
                        "saml-user-property-mapper",
                        "oidc-full-name-mapper",
                        "oidc-usermodel-attribute-mapper",
                        "oidc-usermodel-property-mapper",
                        "oidc-address-mapper",
                        "saml-role-list-mapper"
                      ]
                    }
                  },
                  {
                    "id": "844ee7a5-f98e-4640-88a7-1da821b64085",
                    "name": "Max Clients Limit",
                    "providerId": "max-clients",
                    "subType": "anonymous",
                    "subComponents": {},
                    "config": {
                      "max-clients": [
                        "200"
                      ]
                    }
                  },
                  {
                    "id": "fc271641-30df-40aa-8c92-8a61d5729a38",
                    "name": "Consent Required",
                    "providerId": "consent-required",
                    "subType": "anonymous",
                    "subComponents": {},
                    "config": {}
                  },
                  {
                    "id": "7717935d-a03c-46e0-82fd-78be66dab63b",
                    "name": "Allowed Client Scopes",
                    "providerId": "allowed-client-templates",
                    "subType": "authenticated",
                    "subComponents": {},
                    "config": {
                      "allow-default-scopes": [
                        "true"
                      ]
                    }
                  },
                  {
                    "id": "e3d72400-e970-4fd1-85c6-130d1f0e9b4c",
                    "name": "Full Scope Disabled",
                    "providerId": "scope",
                    "subType": "anonymous",
                    "subComponents": {},
                    "config": {}
                  },
                  {
                    "id": "a1d490a7-504f-4512-9aef-48247d5d2982",
                    "name": "Allowed Protocol Mapper Types",
                    "providerId": "allowed-protocol-mappers",
                    "subType": "anonymous",
                    "subComponents": {},
                    "config": {
                      "allowed-protocol-mapper-types": [
                        "oidc-full-name-mapper",
                        "oidc-address-mapper",
                        "oidc-usermodel-property-mapper",
                        "oidc-sha256-pairwise-sub-mapper",
                        "saml-user-property-mapper",
                        "saml-user-attribute-mapper",
                        "oidc-usermodel-attribute-mapper",
                        "saml-role-list-mapper"
                      ]
                    }
                  },
                  {
                    "id": "0bc6c803-7a6d-46dd-b4d9-4118d7fd465b",
                    "name": "Trusted Hosts",
                    "providerId": "trusted-hosts",
                    "subType": "anonymous",
                    "subComponents": {},
                    "config": {
                      "host-sending-registration-request-must-match": [
                        "true"
                      ],
                      "client-uris-must-match": [
                        "true"
                      ]
                    }
                  }
                ],
                "org.keycloak.userprofile.UserProfileProvider": [
                  {
                    "id": "3c5c068c-c9a5-4d68-8373-b30ae5e54c9c",
                    "providerId": "declarative-user-profile",
                    "subComponents": {},
                    "config": {}
                  }
                ],
                "org.keycloak.keys.KeyProvider": [
                  {
                    "id": "14f2eb89-4c5b-45be-9e27-cb7dba4af208",
                    "name": "aes-generated",
                    "providerId": "aes-generated",
                    "subComponents": {},
                    "config": {
                      "priority": [
                        "100"
                      ]
                    }
                  },
                  {
                    "id": "1e8e4be7-ffe4-496a-89b7-5a00633e5f4d",
                    "name": "rsa-generated",
                    "providerId": "rsa-generated",
                    "subComponents": {},
                    "config": {
                      "priority": [
                        "100"
                      ]
                    }
                  },
                  {
                    "id": "07c549f5-248b-4e04-b5f1-7e2a9fe6f82a",
                    "name": "hmac-generated",
                    "providerId": "hmac-generated",
                    "subComponents": {},
                    "config": {
                      "priority": [
                        "100"
                      ],
                      "algorithm": [
                        "HS256"
                      ]
                    }
                  }
                ]
              },
              "internationalizationEnabled": false,
              "supportedLocales": [
                ""
              ],
              "authenticationFlows": [
                {
                  "id": "aaf5c983-e5ec-46ff-bd14-83a9e81b56de",
                  "alias": "Account verification options",
                  "description": "Method with which to verity the existing account",
                  "providerId": "basic-flow",
                  "topLevel": false,
                  "builtIn": true,
                  "authenticationExecutions": [
                    {
                      "authenticator": "idp-email-verification",
                      "authenticatorFlow": false,
                      "requirement": "ALTERNATIVE",
                      "priority": 10,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    },
                    {
                      "authenticatorFlow": true,
                      "requirement": "ALTERNATIVE",
                      "priority": 20,
                      "autheticatorFlow": true,
                      "flowAlias": "Verify Existing Account by Re-authentication",
                      "userSetupAllowed": false
                    }
                  ]
                },
                {
                  "id": "4c08db83-513d-4e95-aca8-f3d1038537a4",
                  "alias": "Authentication",
                  "description": "",
                  "providerId": "basic-flow",
                  "topLevel": false,
                  "builtIn": false,
                  "authenticationExecutions": [
                    {
                      "authenticator": "auth-cookie",
                      "authenticatorFlow": false,
                      "requirement": "ALTERNATIVE",
                      "priority": 0,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    },
                    {
                      "authenticatorConfig": "dod-cac",
                      "authenticator": "auth-x509-client-username-form",
                      "authenticatorFlow": false,
                      "requirement": "ALTERNATIVE",
                      "priority": 1,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    },
                    {
                      "authenticatorFlow": true,
                      "requirement": "ALTERNATIVE",
                      "priority": 2,
                      "autheticatorFlow": true,
                      "flowAlias": "MFA Login",
                      "userSetupAllowed": false
                    }
                  ]
                },
                {
                  "id": "0fb05d53-07ca-43e5-a740-863b6bcfb92c",
                  "alias": "Authentication Options",
                  "description": "Authentication options.",
                  "providerId": "basic-flow",
                  "topLevel": false,
                  "builtIn": true,
                  "authenticationExecutions": [
                    {
                      "authenticator": "basic-auth",
                      "authenticatorFlow": false,
                      "requirement": "REQUIRED",
                      "priority": 10,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    },
                    {
                      "authenticator": "basic-auth-otp",
                      "authenticatorFlow": false,
                      "requirement": "REQUIRED",
                      "priority": 20,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    },
                    {
                      "authenticator": "auth-spnego",
                      "authenticatorFlow": false,
                      "requirement": "DISABLED",
                      "priority": 30,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    }
                  ]
                },
                {
                  "id": "f29e5af7-3cec-433d-b93f-440f1eef6440",
                  "alias": "Authorization",
                  "description": "",
                  "providerId": "basic-flow",
                  "topLevel": false,
                  "builtIn": false,
                  "authenticationExecutions": [
                    {
                      "authenticator": "p1-group-restriction",
                      "authenticatorFlow": false,
                      "requirement": "REQUIRED",
                      "priority": 0,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    }
                  ]
                },
                {
                  "id": "62979e06-5a84-4c1b-8f8c-e781a78c6e26",
                  "alias": "Browser - Conditional OTP",
                  "description": "Flow to determine if the OTP is required for the authentication",
                  "providerId": "basic-flow",
                  "topLevel": false,
                  "builtIn": true,
                  "authenticationExecutions": [
                    {
                      "authenticator": "conditional-user-configured",
                      "authenticatorFlow": false,
                      "requirement": "REQUIRED",
                      "priority": 10,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    },
                    {
                      "authenticator": "auth-otp-form",
                      "authenticatorFlow": false,
                      "requirement": "REQUIRED",
                      "priority": 20,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    }
                  ]
                },
                {
                  "id": "afef47c8-8bb2-4149-afc3-bcf9f0e6a7ec",
                  "alias": "Conditional OTP",
                  "description": "",
                  "providerId": "basic-flow",
                  "topLevel": false,
                  "builtIn": false,
                  "authenticationExecutions": [
                    {
                      "authenticator": "conditional-user-configured",
                      "authenticatorFlow": false,
                      "requirement": "REQUIRED",
                      "priority": 0,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    },
                    {
                      "authenticator": "auth-otp-form",
                      "authenticatorFlow": false,
                      "requirement": "REQUIRED",
                      "priority": 1,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    }
                  ]
                },
                {
                  "id": "4396a543-3956-477f-b1e0-25f351ccc085",
                  "alias": "Direct Grant - Conditional OTP",
                  "description": "Flow to determine if the OTP is required for the authentication",
                  "providerId": "basic-flow",
                  "topLevel": false,
                  "builtIn": true,
                  "authenticationExecutions": [
                    {
                      "authenticator": "conditional-user-configured",
                      "authenticatorFlow": false,
                      "requirement": "REQUIRED",
                      "priority": 10,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    },
                    {
                      "authenticator": "direct-grant-validate-otp",
                      "authenticatorFlow": false,
                      "requirement": "REQUIRED",
                      "priority": 20,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    }
                  ]
                },
                {
                  "id": "2ebe8a2a-0267-4585-b6b0-b0fb1ef83f21",
                  "alias": "First broker login - Conditional OTP",
                  "description": "Flow to determine if the OTP is required for the authentication",
                  "providerId": "basic-flow",
                  "topLevel": false,
                  "builtIn": true,
                  "authenticationExecutions": [
                    {
                      "authenticator": "conditional-user-configured",
                      "authenticatorFlow": false,
                      "requirement": "REQUIRED",
                      "priority": 10,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    },
                    {
                      "authenticator": "auth-otp-form",
                      "authenticatorFlow": false,
                      "requirement": "REQUIRED",
                      "priority": 20,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    }
                  ]
                },
                {
                  "id": "c9cac54a-8ae3-429f-a57a-8db1b48d7f47",
                  "alias": "Handle Existing Account",
                  "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
                  "providerId": "basic-flow",
                  "topLevel": false,
                  "builtIn": true,
                  "authenticationExecutions": [
                    {
                      "authenticator": "idp-confirm-link",
                      "authenticatorFlow": false,
                      "requirement": "REQUIRED",
                      "priority": 10,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    },
                    {
                      "authenticatorFlow": true,
                      "requirement": "REQUIRED",
                      "priority": 20,
                      "autheticatorFlow": true,
                      "flowAlias": "Account verification options",
                      "userSetupAllowed": false
                    }
                  ]
                },
                {
                  "id": "efdcd9cc-40fd-4323-ae52-b79c06c0d5e9",
                  "alias": "MFA Login",
                  "description": "",
                  "providerId": "basic-flow",
                  "topLevel": false,
                  "builtIn": false,
                  "authenticationExecutions": [
                    {
                      "authenticator": "auth-username-password-form",
                      "authenticatorFlow": false,
                      "requirement": "REQUIRED",
                      "priority": 0,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    },
                    {
                      "authenticatorFlow": true,
                      "requirement": "REQUIRED",
                      "priority": 1,
                      "autheticatorFlow": true,
                      "flowAlias": "Conditional OTP",
                      "userSetupAllowed": false
                    }
                  ]
                },
                {
                  "id": "b84eee98-1099-4f64-922c-8d1603ecf109",
                  "alias": "P1 Authentication",
                  "description": "browser based authentication",
                  "providerId": "basic-flow",
                  "topLevel": true,
                  "builtIn": false,
                  "authenticationExecutions": [
                    {
                      "authenticatorFlow": true,
                      "requirement": "REQUIRED",
                      "priority": 31,
                      "autheticatorFlow": true,
                      "flowAlias": "Authentication",
                      "userSetupAllowed": false
                    },
                    {
                      "authenticatorFlow": true,
                      "requirement": "REQUIRED",
                      "priority": 32,
                      "autheticatorFlow": true,
                      "flowAlias": "Authorization",
                      "userSetupAllowed": false
                    }
                  ]
                },
                {
                  "id": "3010dad8-20dc-486e-9a54-d81c5d9730b5",
                  "alias": "P1 Authentication Browser - Conditional OTP",
                  "description": "Flow to determine if the OTP is required for the authentication",
                  "providerId": "basic-flow",
                  "topLevel": false,
                  "builtIn": false,
                  "authenticationExecutions": [
                    {
                      "authenticator": "conditional-user-configured",
                      "authenticatorFlow": false,
                      "requirement": "REQUIRED",
                      "priority": 10,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    },
                    {
                      "authenticator": "auth-otp-form",
                      "authenticatorFlow": false,
                      "requirement": "REQUIRED",
                      "priority": 20,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    }
                  ]
                },
                {
                  "id": "0c24e346-3289-4ef2-a913-1fe887311522",
                  "alias": "P1 Registration",
                  "description": "registration flow",
                  "providerId": "basic-flow",
                  "topLevel": true,
                  "builtIn": false,
                  "authenticationExecutions": [
                    {
                      "authenticator": "registration-page-form",
                      "authenticatorFlow": true,
                      "requirement": "REQUIRED",
                      "priority": 10,
                      "autheticatorFlow": true,
                      "flowAlias": "P1 Registration registration form",
                      "userSetupAllowed": false
                    }
                  ]
                },
                {
                  "id": "947728a5-e33b-4f43-929e-5fabd1070ad8",
                  "alias": "P1 Registration registration form",
                  "description": "registration form",
                  "providerId": "form-flow",
                  "topLevel": false,
                  "builtIn": false,
                  "authenticationExecutions": [
                    {
                      "authenticator": "registration-user-creation",
                      "authenticatorFlow": false,
                      "requirement": "REQUIRED",
                      "priority": 20,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    },
                    {
                      "authenticatorConfig": "main",
                      "authenticator": "registration-validation-action",
                      "authenticatorFlow": false,
                      "requirement": "REQUIRED",
                      "priority": 50,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    },
                    {
                      "authenticator": "registration-x509-password-action",
                      "authenticatorFlow": false,
                      "requirement": "REQUIRED",
                      "priority": 51,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    }
                  ]
                },
                {
                  "id": "78927fd7-0b83-46ad-9ec4-ed3392ff2604",
                  "alias": "P1 Reset Credentials",
                  "description": "Reset credentials for a user if they forgot their password or something",
                  "providerId": "basic-flow",
                  "topLevel": true,
                  "builtIn": false,
                  "authenticationExecutions": [
                    {
                      "authenticator": "reset-credentials-choose-user",
                      "authenticatorFlow": false,
                      "requirement": "REQUIRED",
                      "priority": 10,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    },
                    {
                      "authenticator": "reset-credential-email",
                      "authenticatorFlow": false,
                      "requirement": "REQUIRED",
                      "priority": 20,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    },
                    {
                      "authenticator": "reset-password",
                      "authenticatorFlow": false,
                      "requirement": "REQUIRED",
                      "priority": 30,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    }
                  ]
                },
                {
                  "id": "e40bdbf7-952a-44fb-8757-596bb4cf05ef",
                  "alias": "Reset - Conditional OTP",
                  "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
                  "providerId": "basic-flow",
                  "topLevel": false,
                  "builtIn": true,
                  "authenticationExecutions": [
                    {
                      "authenticator": "conditional-user-configured",
                      "authenticatorFlow": false,
                      "requirement": "REQUIRED",
                      "priority": 10,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    },
                    {
                      "authenticator": "reset-otp",
                      "authenticatorFlow": false,
                      "requirement": "REQUIRED",
                      "priority": 20,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    }
                  ]
                },
                {
                  "id": "80735579-6e5b-4ec0-b793-06baf205fcec",
                  "alias": "User creation or linking",
                  "description": "Flow for the existing/non-existing user alternatives",
                  "providerId": "basic-flow",
                  "topLevel": false,
                  "builtIn": true,
                  "authenticationExecutions": [
                    {
                      "authenticatorConfig": "create unique user config",
                      "authenticator": "idp-create-user-if-unique",
                      "authenticatorFlow": false,
                      "requirement": "ALTERNATIVE",
                      "priority": 10,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    },
                    {
                      "authenticatorFlow": true,
                      "requirement": "ALTERNATIVE",
                      "priority": 20,
                      "autheticatorFlow": true,
                      "flowAlias": "Handle Existing Account",
                      "userSetupAllowed": false
                    }
                  ]
                },
                {
                  "id": "cc4875a5-8764-4db0-a376-f915794c214b",
                  "alias": "Verify Existing Account by Re-authentication",
                  "description": "Reauthentication of existing account",
                  "providerId": "basic-flow",
                  "topLevel": false,
                  "builtIn": true,
                  "authenticationExecutions": [
                    {
                      "authenticator": "idp-username-password-form",
                      "authenticatorFlow": false,
                      "requirement": "REQUIRED",
                      "priority": 10,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    },
                    {
                      "authenticatorFlow": true,
                      "requirement": "CONDITIONAL",
                      "priority": 20,
                      "autheticatorFlow": true,
                      "flowAlias": "First broker login - Conditional OTP",
                      "userSetupAllowed": false
                    }
                  ]
                },
                {
                  "id": "731329c9-0f81-451b-8351-c199460d4111",
                  "alias": "browser",
                  "description": "browser based authentication",
                  "providerId": "basic-flow",
                  "topLevel": true,
                  "builtIn": true,
                  "authenticationExecutions": [
                    {
                      "authenticator": "auth-cookie",
                      "authenticatorFlow": false,
                      "requirement": "ALTERNATIVE",
                      "priority": 10,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    },
                    {
                      "authenticator": "auth-spnego",
                      "authenticatorFlow": false,
                      "requirement": "DISABLED",
                      "priority": 20,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    },
                    {
                      "authenticator": "identity-provider-redirector",
                      "authenticatorFlow": false,
                      "requirement": "ALTERNATIVE",
                      "priority": 25,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    },
                    {
                      "authenticatorFlow": true,
                      "requirement": "ALTERNATIVE",
                      "priority": 30,
                      "autheticatorFlow": true,
                      "flowAlias": "forms",
                      "userSetupAllowed": false
                    }
                  ]
                },
                {
                  "id": "5a971764-22d2-4c92-941a-7e27e141c3dd",
                  "alias": "clients",
                  "description": "Base authentication for clients",
                  "providerId": "client-flow",
                  "topLevel": true,
                  "builtIn": true,
                  "authenticationExecutions": [
                    {
                      "authenticator": "client-secret",
                      "authenticatorFlow": false,
                      "requirement": "ALTERNATIVE",
                      "priority": 10,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    },
                    {
                      "authenticator": "client-jwt",
                      "authenticatorFlow": false,
                      "requirement": "ALTERNATIVE",
                      "priority": 20,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    },
                    {
                      "authenticator": "client-secret-jwt",
                      "authenticatorFlow": false,
                      "requirement": "ALTERNATIVE",
                      "priority": 30,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    },
                    {
                      "authenticator": "client-x509",
                      "authenticatorFlow": false,
                      "requirement": "ALTERNATIVE",
                      "priority": 40,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    }
                  ]
                },
                {
                  "id": "cb115744-23b0-460c-beeb-54f0f1cbd39a",
                  "alias": "direct grant",
                  "description": "OpenID Connect Resource Owner Grant",
                  "providerId": "basic-flow",
                  "topLevel": true,
                  "builtIn": true,
                  "authenticationExecutions": [
                    {
                      "authenticator": "direct-grant-validate-username",
                      "authenticatorFlow": false,
                      "requirement": "REQUIRED",
                      "priority": 10,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    },
                    {
                      "authenticator": "direct-grant-validate-password",
                      "authenticatorFlow": false,
                      "requirement": "REQUIRED",
                      "priority": 20,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    },
                    {
                      "authenticatorFlow": true,
                      "requirement": "CONDITIONAL",
                      "priority": 30,
                      "autheticatorFlow": true,
                      "flowAlias": "Direct Grant - Conditional OTP",
                      "userSetupAllowed": false
                    }
                  ]
                },
                {
                  "id": "e4fbab7a-c7c7-490c-bcc7-21083df0e28b",
                  "alias": "docker auth",
                  "description": "Used by Docker clients to authenticate against the IDP",
                  "providerId": "basic-flow",
                  "topLevel": true,
                  "builtIn": true,
                  "authenticationExecutions": [
                    {
                      "authenticator": "docker-http-basic-authenticator",
                      "authenticatorFlow": false,
                      "requirement": "REQUIRED",
                      "priority": 10,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    }
                  ]
                },
                {
                  "id": "3ef5c634-dda9-4bd5-a8fd-9943935ac457",
                  "alias": "first broker login",
                  "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
                  "providerId": "basic-flow",
                  "topLevel": true,
                  "builtIn": true,
                  "authenticationExecutions": [
                    {
                      "authenticatorConfig": "review profile config",
                      "authenticator": "idp-review-profile",
                      "authenticatorFlow": false,
                      "requirement": "REQUIRED",
                      "priority": 10,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    },
                    {
                      "authenticatorFlow": true,
                      "requirement": "REQUIRED",
                      "priority": 20,
                      "autheticatorFlow": true,
                      "flowAlias": "User creation or linking",
                      "userSetupAllowed": false
                    }
                  ]
                },
                {
                  "id": "6b5dd82c-31a0-4e25-9982-820f1d1e9fba",
                  "alias": "forms",
                  "description": "Username, password, otp and other auth forms.",
                  "providerId": "basic-flow",
                  "topLevel": false,
                  "builtIn": true,
                  "authenticationExecutions": [
                    {
                      "authenticator": "auth-username-password-form",
                      "authenticatorFlow": false,
                      "requirement": "REQUIRED",
                      "priority": 10,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    },
                    {
                      "authenticatorFlow": true,
                      "requirement": "CONDITIONAL",
                      "priority": 20,
                      "autheticatorFlow": true,
                      "flowAlias": "Browser - Conditional OTP",
                      "userSetupAllowed": false
                    }
                  ]
                },
                {
                  "id": "bd6bb8fc-7d9c-4d3d-8016-3e800fa6b1f0",
                  "alias": "http challenge",
                  "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
                  "providerId": "basic-flow",
                  "topLevel": true,
                  "builtIn": true,
                  "authenticationExecutions": [
                    {
                      "authenticator": "no-cookie-redirect",
                      "authenticatorFlow": false,
                      "requirement": "REQUIRED",
                      "priority": 10,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    },
                    {
                      "authenticatorFlow": true,
                      "requirement": "REQUIRED",
                      "priority": 20,
                      "autheticatorFlow": true,
                      "flowAlias": "Authentication Options",
                      "userSetupAllowed": false
                    }
                  ]
                },
                {
                  "id": "3f72ac91-6d3d-40f9-808c-82cc50147607",
                  "alias": "registration",
                  "description": "registration flow",
                  "providerId": "basic-flow",
                  "topLevel": true,
                  "builtIn": true,
                  "authenticationExecutions": [
                    {
                      "authenticator": "registration-page-form",
                      "authenticatorFlow": true,
                      "requirement": "REQUIRED",
                      "priority": 10,
                      "autheticatorFlow": true,
                      "flowAlias": "registration form",
                      "userSetupAllowed": false
                    }
                  ]
                },
                {
                  "id": "9a9a97d4-eb00-4fcb-8980-b92357235e9a",
                  "alias": "registration form",
                  "description": "registration form",
                  "providerId": "form-flow",
                  "topLevel": false,
                  "builtIn": true,
                  "authenticationExecutions": [
                    {
                      "authenticator": "registration-user-creation",
                      "authenticatorFlow": false,
                      "requirement": "REQUIRED",
                      "priority": 20,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    },
                    {
                      "authenticator": "registration-profile-action",
                      "authenticatorFlow": false,
                      "requirement": "REQUIRED",
                      "priority": 40,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    },
                    {
                      "authenticator": "registration-password-action",
                      "authenticatorFlow": false,
                      "requirement": "REQUIRED",
                      "priority": 50,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    },
                    {
                      "authenticator": "registration-recaptcha-action",
                      "authenticatorFlow": false,
                      "requirement": "DISABLED",
                      "priority": 60,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    }
                  ]
                },
                {
                  "id": "965e84c5-d8c2-44de-b77d-e1d2be52e502",
                  "alias": "reset credentials",
                  "description": "Reset credentials for a user if they forgot their password or something",
                  "providerId": "basic-flow",
                  "topLevel": true,
                  "builtIn": true,
                  "authenticationExecutions": [
                    {
                      "authenticator": "reset-credentials-choose-user",
                      "authenticatorFlow": false,
                      "requirement": "REQUIRED",
                      "priority": 10,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    },
                    {
                      "authenticator": "reset-credential-email",
                      "authenticatorFlow": false,
                      "requirement": "REQUIRED",
                      "priority": 20,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    },
                    {
                      "authenticator": "reset-password",
                      "authenticatorFlow": false,
                      "requirement": "REQUIRED",
                      "priority": 30,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    },
                    {
                      "authenticatorFlow": true,
                      "requirement": "CONDITIONAL",
                      "priority": 40,
                      "autheticatorFlow": true,
                      "flowAlias": "Reset - Conditional OTP",
                      "userSetupAllowed": false
                    }
                  ]
                },
                {
                  "id": "1388ddf0-8984-465d-8231-fd41e6e8641f",
                  "alias": "saml ecp",
                  "description": "SAML ECP Profile Authentication Flow",
                  "providerId": "basic-flow",
                  "topLevel": true,
                  "builtIn": true,
                  "authenticationExecutions": [
                    {
                      "authenticator": "http-basic-authenticator",
                      "authenticatorFlow": false,
                      "requirement": "REQUIRED",
                      "priority": 10,
                      "autheticatorFlow": false,
                      "userSetupAllowed": false
                    }
                  ]
                }
              ],
              "authenticatorConfig": [
                {
                  "id": "8e8c57f8-b46c-4004-8b19-80c296522ef2",
                  "alias": "create unique user config",
                  "config": {
                    "require.password.update.after.registration": "false"
                  }
                },
                {
                  "id": "19897989-c062-4d9a-90e6-901b30a59405",
                  "alias": "dod-cac",
                  "config": {
                    "x509-cert-auth.canonical-dn-enabled": "false",
                    "x509-cert-auth.mapper-selection.user-attribute-name": "usercertificate",
                    "x509-cert-auth.serialnumber-hex-enabled": "false",
                    "x509-cert-auth.regular-expression": "(.*?)(?:$)",
                    "x509-cert-auth.mapper-selection": "Custom Attribute Mapper",
                    "x509-cert-auth.crl-relative-path": "crl.pem",
                    "x509-cert-auth.crldp-checking-enabled": "false",
                    "x509-cert-auth.mapping-source-selection": "Subject's Common Name",
                    "x509-cert-auth.timestamp-validation-enabled": "true"
                  }
                },
                {
                  "id": "3ec80e9e-6384-4ba6-9a79-2528564794c8",
                  "alias": "main",
                  "config": {}
                },
                {
                  "id": "6f29aa18-5cca-4ff0-b100-e796263208f0",
                  "alias": "review profile config",
                  "config": {
                    "update.profile.on.first.login": "missing"
                  }
                }
              ],
              "requiredActions": [
                {
                  "alias": "CONFIGURE_TOTP",
                  "name": "Configure OTP",
                  "providerId": "CONFIGURE_TOTP",
                  "enabled": true,
                  "defaultAction": false,
                  "priority": 10,
                  "config": {}
                },
                {
                  "alias": "terms_and_conditions",
                  "name": "Terms and Conditions",
                  "providerId": "terms_and_conditions",
                  "enabled": true,
                  "defaultAction": true,
                  "priority": 20,
                  "config": {}
                },
                {
                  "alias": "UPDATE_PASSWORD",
                  "name": "Update Password",
                  "providerId": "UPDATE_PASSWORD",
                  "enabled": true,
                  "defaultAction": false,
                  "priority": 30,
                  "config": {}
                },
                {
                  "alias": "UPDATE_PROFILE",
                  "name": "Update Profile",
                  "providerId": "UPDATE_PROFILE",
                  "enabled": true,
                  "defaultAction": false,
                  "priority": 40,
                  "config": {}
                },
                {
                  "alias": "VERIFY_EMAIL",
                  "name": "Verify Email",
                  "providerId": "VERIFY_EMAIL",
                  "enabled": true,
                  "defaultAction": true,
                  "priority": 50,
                  "config": {}
                },
                {
                  "alias": "delete_account",
                  "name": "Delete Account",
                  "providerId": "delete_account",
                  "enabled": false,
                  "defaultAction": false,
                  "priority": 60,
                  "config": {}
                },
                {
                  "alias": "update_user_locale",
                  "name": "Update User Locale",
                  "providerId": "update_user_locale",
                  "enabled": true,
                  "defaultAction": false,
                  "priority": 1000,
                  "config": {}
                },
                {
                  "alias": "UPDATE_X509",
                  "name": "Update X509",
                  "providerId": "UPDATE_X509",
                  "enabled": true,
                  "defaultAction": false,
                  "priority": 1001,
                  "config": {}
                }
              ],
              "browserFlow": "P1 Authentication",
              "registrationFlow": "P1 Registration",
              "directGrantFlow": "direct grant",
              "resetCredentialsFlow": "P1 Reset Credentials",
              "clientAuthenticationFlow": "clients",
              "dockerAuthenticationFlow": "docker auth",
              "attributes": {
                "cibaBackchannelTokenDeliveryMode": "poll",
                "cibaExpiresIn": "120",
                "cibaAuthRequestedUserHint": "login_hint",
                "oauth2DeviceCodeLifespan": "600",
                "clientOfflineSessionMaxLifespan": "0",
                "oauth2DevicePollingInterval": "5",
                "clientSessionIdleTimeout": "3600",
                "parRequestUriLifespan": "60",
                "clientSessionMaxLifespan": "86400",
                "clientOfflineSessionIdleTimeout": "0",
                "cibaInterval": "5"
              },
              "keycloakVersion": "18.0.2",
              "userManagedAccessAllowed": false,
              "clientProfiles": {
                "profiles": []
              },
              "clientPolicies": {
                "policies": []
              }
            }
        customreg:
          stringData:
            customreg.yaml: '{{ .Files.Get "resources/dev/baby-yoda.yaml" }}'
